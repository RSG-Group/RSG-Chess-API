{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///test.js","webpack:///webpack/bootstrap 6a9a498af15414d67408","webpack:///./src/game.js","webpack:///./src/pieces.js","webpack:///./src/AI.js","webpack:///./src/index.js","webpack:///./test/index.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Game","promoCallback","board","arrayIn","j","push","turn","FEN","FENboard","threefold","value","_pieces","_AI","_AI2","obj","default","piece","type","x","y","color","Piece","gameToFEN","boardToFEN","moveSelected","selected","to","promotionCallback","checkmateCallback","playAgainstAI","comingAI","simulate","from","validMoves","getValidMoves","validMove","length","vm","take","paste","rook","movePiece","threefoldCheck","halfmoveClock","promotePawn","checkmateColor","checkmateValue","checkmate","bestMove","depth","pawn","simulateAndFilter","moves","forEach","move","simpleMovePiece","warning","simpleMove","capturedPiece","pop","king","result","yyy","xxx","mmm","count","pieceToAN","charAt","missingPieces","FENname","ev","activeColour","castlingTarget","whiteKingMoved","blackKingMoved","possibleCastling","props","rookX","rookY","some","castlingSide","toUpperCase","enPassantTarget","fullmoveCount","initializeGame","defaultGame","allMoves","charBase","game","char","Pawn","PIECE_CHARS","Rook","Knight","knight","Bishop","bishop","Queen","queen","King","W","B","empty","last","figX","colorY","colorY2","figXArray","coef","index","one","two","coordinates","boardPiece","help","rookMoves","bishopMoves","concat","coord","xx","yy","newKingX","dir","safe","evv","evMove","rochade","_game","_game2","ChessAI","gameState","isMaximisingPlayer","bestValue","newGameMove","undo","boradValue","minimax","alpha","beta","evaluateBoard","Math","max","min","totalEvaluation","getPieceValue","absoluteValue","_interopRequireDefault","AI","Pieces","undefined","newObj","key","_index","bestAI","console","log"],"mappings":"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","file":"test.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"rsg-chess\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rsg-chess\"] = factory();\n\telse\n\t\troot[\"rsg-chess\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"rsg-chess\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rsg-chess\"] = factory();\n\telse\n\t\troot[\"rsg-chess\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _pieces = __webpack_require__(1);\n\nvar _AI = __webpack_require__(2);\n\nvar _AI2 = _interopRequireDefault(_AI);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction Game(promoCallback) {\n  // the game board\n  this.board = [];\n  // fill the board\n  for (var i = 0; i < 8; i++) {\n    var arrayIn = [];\n    for (var j = 0; j < 8; j++) {\n      arrayIn.push(null);\n    }\n    this.board.push(arrayIn);\n  }\n\n  // the history of all turns\n  this.turn = [];\n  // the current FEN status\n  this.FEN = [];\n  // the current game configuration as FEN\n  this.FENboard = [];\n  // the history of all game configurations displayed using FEN\n  this.threefold = [];\n}\n\nGame.prototype.piece = function (type, x, y, color) {\n  var piece = _pieces.Piece[type](x, y, color, this);\n  this.board[y][x] = piece;\n\n  this.FEN = this.gameToFEN();\n  this.FENboard = this.boardToFEN();\n};\n\nGame.prototype.moveSelected = function (selected, to, promotionCallback, checkmateCallback, playAgainstAI, comingAI, simulate) {\n  var x = to.x;\n  var y = to.y;\n\n  if (selected) {\n    var from = { x: selected.x, y: selected.y };\n\n    if (this.board[y][x] !== selected) {\n      var validMoves = selected.getValidMoves(!simulate);\n      var validMove = null;\n\n      for (var i = 0; i < validMoves.length; i++) {\n        var vm = validMoves[i];\n        if (vm.x === x && vm.y === y) {\n          validMove = vm;\n          break;\n        }\n      }\n\n      if (!validMove) return false;\n      var movePiece = validMove.movePiece;\n      var take, paste, rook;\n      if (movePiece) {\n        take = movePiece.from;\n        paste = movePiece.to;\n        if (paste === null) {\n          this.board[take.y][take.x] = null;\n        } else {\n          rook = this.board[take.y][take.x];\n          this.board[paste.y][paste.x] = rook;\n          rook.x = paste.x;\n          rook.y = paste.y;\n          this.board[take.y][take.x] = null;\n        }\n      }\n\n      var piece = this.board[y][x] ? this.board[y][x] : null;\n      movePiece = movePiece ? validMove.movePiece : null;\n      this.turn.push({\n        from: from,\n        to: to,\n        color: selected.color,\n        type: selected.type,\n        piece: piece,\n        movePiece: movePiece\n      });\n\n      this.board[y][x] = selected;\n      this.board[selected.y][selected.x] = null;\n      this.board[y][x].x = x;\n      this.board[y][x].y = y;\n\n      this.FEN = this.gameToFEN();\n      this.FENboard = this.boardToFEN();\n      // check for threefold repetition\n\n      this.threefold.push(this.FENboard);\n      if (selected.type === 'pawn' || piece) this.threefold = [];\n      if (this.threefoldCheck()) checkmateCallback('D');\n\n      // check for the fifty-move rule\n      if (this.halfmoveClock() >= 50) checkmateCallback('D');\n\n      // check for pawn promotion\n      if (selected.type === 'pawn') {\n        if (selected.color === 'W' && y === 0 || selected.color === 'B' && y === 7) {\n          if (promotionCallback) {\n            !playAgainstAI && comingAI && selected.color === 'B' ? this.promotePawn(selected, x, y, selected.color, 'queen') : promotionCallback(selected, x, y, selected.color);\n          }\n        }\n      };\n\n      var checkmateColor = selected.color === 'W' ? 'B' : 'W';\n      var checkmateValue = this.checkmate(checkmateColor);\n      if (checkmateValue) checkmateCallback(checkmateValue);\n\n      // Play AI\n      if (playAgainstAI) {\n        var bestMove = (0, _AI2.default)(playAgainstAI.depth, this, false);\n        this.moveSelected(this.board[bestMove.from.y][bestMove.from.x], bestMove.to, promotionCallback, checkmateCallback, false, true, simulate);\n      }\n      // end\n    }\n    selected = null;\n    return true;\n  }\n};\n\nGame.prototype.promotePawn = function (pawn, x, y, color, type) {\n  this.piece(type, x, y, color);\n};\n\nGame.prototype.simulateAndFilter = function (moves, piece) {\n  var validMoves = [];\n  var self = this;\n  var board = this.board;\n\n  moves.forEach(function (move, i) {\n    var y = move.y;\n    var x = move.x;\n    var from = { x: piece.x, y: piece.y };\n    var movePiece = board[y][x] ? {\n      piece: board[y][x],\n      from: { x: x, y: y },\n      to: null\n    } : null;\n\n    if (move.movePiece) movePiece = move.movePiece;\n    if (movePiece) self.simpleMovePiece(movePiece.piece, movePiece.from, movePiece.to);\n\n    self.simpleMovePiece(piece, from, { x: x, y: y });\n    var warning = self.warning(piece.color);\n\n    // Return king\n    self.simpleMovePiece(piece, { x: x, y: y }, from);\n\n    // return the movePiece with simpleMovePiece() method\n    if (movePiece) self.simpleMovePiece(movePiece.piece, movePiece.to, movePiece.from);\n\n    if (!warning) validMoves.push(move);\n  });\n  return validMoves;\n};\n\nGame.prototype.checkmate = function (color) {\n  // using let will allow us to make the code a bit simpler\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      if (this.board[i][j] && this.board[i][j].color === color && this.board[i][j].getValidMoves(true).length) return false;\n    }\n  }\n  if (this.warning(color)) return color;\n  return 'D';\n};\n\nGame.prototype.simpleMovePiece = function (piece, from, to) {\n  var board = this.board;\n  if (to) {\n    board[to.y][to.x] = piece;\n    piece.x = to.x;\n    piece.y = to.y;\n  }\n  if (from) board[from.y][from.x] = null;\n};\n\nGame.prototype.simpleMove = function (move) {\n  var self = this;\n  var board = self.board;\n  var from = move.from;\n  var to = move.to;\n  var piece = board[from.y][from.x];\n  var capturedPiece = this.board[to.y][to.x] ? this.board[to.y][to.x] : null;\n  var movePiece = board[to.y][to.x] ? {\n    piece: board[to.y][to.x],\n    from: { x: to.x, y: to.y },\n    to: null\n  } : null;\n\n  this.turn.push({\n    from: from,\n    to: { x: to.x, y: to.y },\n    color: move.color,\n    type: piece.type,\n    piece: capturedPiece,\n    movePiece: movePiece\n  });\n\n  if (to.movePiece) movePiece = to.movePiece;\n  if (movePiece) self.simpleMovePiece(movePiece.piece, movePiece.from, movePiece.to);\n  self.simpleMovePiece(piece, from, { x: to.x, y: to.y });\n\n  return function () {\n    // return the current move /ev/\n    if (movePiece) self.simpleMovePiece(movePiece.piece, movePiece.to, movePiece.from);\n    self.simpleMovePiece(piece, { x: to.x, y: to.y }, from);\n    if (capturedPiece) board[to.y][to.x] = capturedPiece;\n    self.turn.pop();\n  };\n};\n\nGame.prototype.warning = function (color) {\n  var result = false;\n  var king;\n\n  this.board.forEach(function (yyy) {\n    yyy.forEach(function (xxx) {\n      if (xxx && xxx.color === color && xxx.type === 'king') {\n        king = xxx;\n      }\n    });\n  });\n\n  this.board.forEach(function (yyy) {\n    yyy.forEach(function (xxx) {\n      if (xxx && xxx.color !== color) {\n        xxx.getValidMoves().forEach(function (mmm) {\n          if (mmm.x === king.x && mmm.y === king.y) result = true;\n        });\n      }\n    });\n  });\n  return result;\n};\n\nGame.prototype.threefoldCheck = function () {\n  var threefold = this.threefold;\n  var length = threefold.length;\n\n  for (var i = 0; i < length; i++) {\n    // using let will allow us to make the code simpler\n    var count = 0;\n    for (var j = i + 1; j < length; j++) {\n      if (threefold[i] === threefold[j]) count += 1;\n    }\n    if (count >= 2) return true;\n  }\n\n  return false;\n};\n\nGame.prototype.pieceToAN = function (x, y) {\n  var xChars = 'abcdefgh';\n  return xChars.charAt(x) + (8 - y);\n};\n\n// Support FEN functions in the API\nGame.prototype.boardToFEN = function () {\n  var board = this.board;\n\n  // Convert the board configuration into FEN\n  var FENboard = '';\n  var missingPieces = 0;\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      if (board[i][j]) {\n        if (missingPieces) FENboard += missingPieces;\n        missingPieces = 0;\n        FENboard += board[i][j].FENname;\n      } else {\n        missingPieces++;\n      }\n    }\n    if (missingPieces) FENboard += missingPieces;\n    missingPieces = 0;\n    FENboard += i < 7 ? '/' : '';\n  }\n\n  return FENboard;\n};\n\nGame.prototype.halfmoveClock = function () {\n  var turn = this.turn;\n  var length = turn.length;\n  var count = 0;\n  if (turn.length === 0) return count;\n\n  var ev = turn[length - 1 - count];\n  while (count <= length - 1 && ev.type !== 'pawn' && !ev.piece) {\n    count++;\n    ev = turn[length - 1 - count];\n  }\n\n  return count;\n};\n\nGame.prototype.activeColour = function () {\n  var turn = this.turn;\n  var activeColor = turn.length && turn[turn.length - 1].color === 'W' ? 'b' : 'w';\n\n  return activeColor;\n};\n\nGame.prototype.castlingTarget = function () {\n  var board = this.board;\n  var turn = this.turn;\n  var possibleCastling = '';\n\n  var whiteKingMoved;\n  var blackKingMoved;\n  turn.forEach(function (turn) {\n    whiteKingMoved = turn.type === 'king' && turn.color === 'W';\n    blackKingMoved = turn.type === 'king' && turn.color === 'B';\n  });\n\n  [[7, 0], [0, 0], [7, 7], [0, 7]].forEach(function (props) {\n    var rookX = props[0];\n    var rookY = props[1];\n    var rook = board[rookY][rookX];\n\n    if (rookY === 7 && whiteKingMoved) return;\n    if (rookY === 0 && blackKingMoved) return;\n\n    // Check rook on position\n    if (!rook || !rook.type === 'rook') return;\n\n    // Check rook hasn't moved\n    if (turn.some(function (ev) {\n      if (ev.type !== 'rook') return false;\n      return ev.from.x === rookX && ev.from.y === rookY;\n    })) return;\n\n    var castlingSide = rookX === 0 ? 'q' : 'k';\n    possibleCastling += rookY === 0 ? castlingSide.toUpperCase() : castlingSide;\n  });\n\n  if (!possibleCastling) possibleCastling = '-';\n  return possibleCastling;\n};\n\nGame.prototype.enPassantTarget = function () {\n  var turn = this.turn;\n  var enPassantTarget = '';\n\n  if (turn.length) {\n    var ev = turn[turn.length - 1];\n    if (ev.color === 'W' && ev.to.y === 4) {\n      enPassantTarget = this.pieceToAN(ev.to.x, ev.to.y + 1);\n    }\n\n    if (ev.color === 'B' && ev.to.y === 3) {\n      enPassantTarget = this.pieceToAN(ev.to.x, ev.to.y - 1);\n    }\n  }\n\n  if (!enPassantTarget) enPassantTarget = '-';\n  return enPassantTarget;\n};\n\nGame.prototype.fullmoveCount = function () {\n  var count = 1;\n  this.turn.forEach(function (ev) {\n    if (ev.color === 'B') count += 1;\n  });\n\n  return count;\n};\n\nGame.prototype.gameToFEN = function () {\n  var FEN = '';\n\n  // Check the board configuration\n  FEN += this.boardToFEN();\n\n  // Find the active colour\n  FEN += ' ' + this.activeColour();\n\n  // Check castling availability\n  FEN += ' ' + this.castlingTarget();\n\n  // Check the En-passant target\n  FEN += ' ' + this.enPassantTarget();\n\n  // Add the halfmove clock\n  FEN += ' ' + this.halfmoveClock();\n\n  // Add the fullmove number\n  FEN += ' ' + this.fullmoveCount();\n\n  /*\r\n    More information about the FEN notation:\r\n    https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation\r\n    https://chessprogramming.wikispaces.com/Forsyth-Edwards+Notation\r\n  */\n\n  return FEN;\n};\n\n// Set up default game configuration\nGame.prototype.initializeGame = function () {\n  var defaultGame = new Game();\n\n  // Pawns:\n  for (var i = 0; i < 8; i++) {\n    defaultGame.piece('pawn', i, 6, 'W');\n    defaultGame.piece('pawn', i, 1, 'B');\n  }\n\n  // Black figs:\n  defaultGame.piece('rook', 0, 0, 'B');\n  defaultGame.piece('knight', 1, 0, 'B');\n  defaultGame.piece('bishop', 2, 0, 'B');\n  defaultGame.piece('queen', 3, 0, 'B');\n  defaultGame.piece('king', 4, 0, 'B');\n  defaultGame.piece('bishop', 5, 0, 'B');\n  defaultGame.piece('knight', 6, 0, 'B');\n  defaultGame.piece('rook', 7, 0, 'B');\n\n  // White figs:\n  defaultGame.piece('rook', 0, 7, 'W');\n  defaultGame.piece('knight', 1, 7, 'W');\n  defaultGame.piece('bishop', 2, 7, 'W');\n  defaultGame.piece('queen', 3, 7, 'W');\n  defaultGame.piece('king', 4, 7, 'W');\n  defaultGame.piece('bishop', 5, 7, 'W');\n  defaultGame.piece('knight', 6, 7, 'W');\n  defaultGame.piece('rook', 7, 7, 'W');\n\n  return defaultGame;\n};\n\nGame.prototype.allMoves = function () {\n  var board = this.board;\n  var allMoves = [];\n  var activeColour = this.activeColour().toUpperCase();\n\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      if (board[i][j] && board[i][j].color === activeColour) {\n        var validMoves = board[i][j].getValidMoves(true);\n        validMoves.forEach(function (ev) {\n          allMoves.push({\n            color: board[i][j].color,\n            from: { x: j, y: i },\n            to: ev,\n            FENname: board[i][j].FENname\n          });\n        });\n      }\n    }\n  }\n\n  return allMoves;\n};\n\nexports.default = Game;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//\n// RSG Chess\n// Licensed under Apache 2.0 LICENSE\n\nvar PIECE_CHARS = exports.PIECE_CHARS = {\n  pawn: { W: '♙', B: '♟' },\n  rook: { W: '♖', B: '♜' },\n  knight: { W: '♘', B: '♞' },\n  bishop: { W: '♗', B: '♝' },\n  queen: { W: '♕', B: '♛' },\n  king: { W: '♔', B: '♚' }\n};\n\nfunction Piece(x, y, charBase, color, game, type) {\n  if (charBase) this.char = charBase[color];\n  this.color = color;\n  this.x = x;\n  this.y = y;\n  this.game = game;\n  this.type = type;\n  if (type) {\n    var FENname = type === 'knight' ? 'n' : type.charAt(0);\n    if (this.color === 'W') FENname = FENname.toUpperCase();\n    this.FENname = FENname;\n  }\n}\n\nPiece.empty = function () {\n  return new Piece();\n};\n\nPiece.prototype.getValidMoves = function () {\n  return [{ x: 0, y: 0 }, { x: 7, y: 7 }];\n};\n\nfunction Pawn(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.pawn, color, game, 'pawn');\n}\n\nPawn.prototype = Piece.empty();\nPawn.prototype.getValidMoves = function (simulate) {\n  var game = this.game;\n  var moves = [];\n  /* eslint-disable */\n  var y = this.y,\n      x = this.x;\n  var board = game.board,\n      turn = game.turn,\n      length = turn.length;\n  var last, turnTo, turnFrom, figX, passantLast, passantFig;\n  var colorY = this.color === 'W' ? y - 1 : y + 1;\n  var colorY2 = this.color === 'W' ? y - 2 : y + 2;\n  var passantY2 = this.color === 'W' ? 3 : 4;\n  var figXArray = [x - 1, x + 1];\n  /* eslint-enable */\n\n  if (colorY < 8 && colorY >= 0 && !board[colorY][x]) {\n    moves.push({ x: x, y: colorY });\n    if ((y === 1 || y === 6) && colorY2 < 8 && colorY2 >= 0 && !game.board[colorY2][x]) {\n      moves.push({ x: x, y: colorY2 });\n    }\n  }\n\n  for (var i = 0; i < 2; i++) {\n    figX = figXArray[i];\n    if (colorY < 8 && colorY >= 0 && board[colorY][figX] && board[colorY][figX].color !== this.color) moves.push({ x: figX, y: colorY });\n  }\n\n  // Check for en-passant\n  for (var _i = 0; _i < 2; _i++) {\n    figX = figXArray[_i];\n    last = turn[length - 1];\n\n    if (last && last.type === 'pawn' && last.to.x === figX && last.to.y === y && last.color !== this.color && (last.from.y === 1 || last.from.y === 6) && (y === 3 || y === 4)) {\n      moves.push({\n        x: figX,\n        y: colorY,\n        movePiece: {\n          piece: game.board[y][figX],\n          from: {\n            x: figX,\n            y: y\n          },\n          to: null\n        }\n      });\n    }\n  }\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.pawn = function (x, y, color, game) {\n  return new Pawn(x, y, color, game);\n};\n\n// //\n\nfunction Rook(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.rook, color, game, 'rook');\n}\n\nRook.prototype = Piece.empty();\nRook.prototype.getValidMoves = function (simulate) {\n  var game = this.game;\n  var moves = [];\n\n  [[-1, 0], [1, 0], [0, 1], [0, -1]].forEach(function (coef) {\n    var index, x, y, piece;\n    for (index = 1;; index++) {\n      x = this.x + coef[0] * index;\n      y = this.y + coef[1] * index;\n      if (y < 0 || y > 7 || x < 0 || x > 7) break;\n\n      piece = game.board[y][x];\n      if (piece && piece.color === this.color) break;\n\n      moves.push({ x: x, y: y });\n      if (piece) break;\n    }\n  }, this);\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.rook = function (x, y, color, game) {\n  return new Rook(x, y, color, game);\n};\n\n// //\n\nfunction Knight(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.knight, color, game, 'knight');\n}\n\nKnight.prototype = Piece.empty();\nKnight.prototype.getValidMoves = function (simulate) {\n  var game = this.game;\n  var moves = [];\n\n  var coordinates = [[2, 1], [-2, 1], [1, 2], [-1, 2], [2, -1], [-2, -1], [1, -2], [-1, -2]];\n\n  var one, two;\n  for (var i = 0; i < coordinates.length; i++) {\n    var help = false;\n    var boardPiece;\n    one = coordinates[i][0];\n    two = coordinates[i][1];\n\n    if (this.x + one < 8 && this.x + one >= 0 && this.y + two < 8 && this.y + two >= 0) {\n      boardPiece = game.board[this.y + two][this.x + one];\n      help = boardPiece ? boardPiece.color !== this.color : true;\n    }\n\n    if (help) {\n      moves.push({ x: this.x + one, y: this.y + two });\n    }\n  }\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.knight = function (x, y, color, game) {\n  return new Knight(x, y, color, game);\n};\n\n// //\n\nfunction Bishop(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.bishop, color, game, 'bishop');\n}\n\nBishop.prototype = Piece.empty();\nBishop.prototype.getValidMoves = function (simulate) {\n  var game = this.game;\n  var moves = [];\n\n  [[-1, -1], [1, 1], [-1, 1], [1, -1]].forEach(function (coef) {\n    var index, x, y, piece;\n    for (index = 1;; index++) {\n      x = this.x + coef[0] * index;\n      y = this.y + coef[1] * index;\n      if (y < 0 || y > 7 || x < 0 || x > 7) break;\n\n      piece = game.board[y][x];\n      if (piece && piece.color === this.color) break;\n\n      moves.push({ x: x, y: y });\n      if (piece) break;\n    }\n  }, this);\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.bishop = function (x, y, color, game) {\n  return new Bishop(x, y, color, game);\n};\n\n// //\n\nfunction Queen(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.queen, color, game, 'queen');\n}\n\nQueen.prototype = Piece.empty();\nQueen.prototype.getValidMoves = function (simulate) {\n  var game = this.game;\n  var rookMoves = Rook.prototype.getValidMoves.call(this);\n  var bishopMoves = Bishop.prototype.getValidMoves.call(this);\n  var moves = rookMoves.concat(bishopMoves);\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.queen = function (x, y, color, game) {\n  return new Queen(x, y, color, game);\n};\n\n// //\n\nfunction King(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.king, color, game, 'king');\n}\n\nKing.prototype = Piece.empty();\nKing.prototype.getValidMoves = function (simulate) {\n  var moves = [];\n  var coordinates = [[0, 1], [0, -1], [1, 1], [-1, -1], [1, -1], [-1, 1], [-1, 0], [1, 0]];\n  var x = this.x;\n  var y = this.y;\n  var game = this.game;\n  var turn = game.turn;\n  var self = this;\n\n  coordinates.forEach(function (coord) {\n    var piece;\n    var xx = x + coord[0];\n    var yy = y + coord[1];\n\n    if (xx < 8 && xx >= 0 && yy < 8 && yy >= 0) {\n      piece = game.board[yy][xx];\n      if (!piece || piece.color !== self.color) {\n        moves.push({ x: xx, y: yy });\n      }\n    }\n  });\n\n  // Check king hasn't moved\n  var kingMoved = turn.some(function (turn) {\n    return turn.type === 'king' && turn.color === self.color;\n  });\n\n  if (!kingMoved) {\n    [[0, 2, -1], [7, 6, +1]].forEach(function (props) {\n      var rookX = props[0];\n      var newKingX = props[1];\n      var dir = props[2];\n      var rook = game.board[y][rookX];\n\n      // Check rook on position\n      if (!rook || !rook.type === 'rook') return;\n\n      // Check rook hasn't moved\n      if (turn.some(function (ev) {\n        return ev.from.x === rookX && ev.from.y === y;\n      })) return;\n\n      // Check squares empty and safe\n      for (var xx = x + dir; xx !== rookX; xx += dir) {\n        if (game.board[y][xx]) return;\n        var safe = true;\n        game.board.forEach(function (ev) {\n          ev.forEach(function (evv) {\n            if (evv && evv.type !== 'king' && evv.color !== self.color) {\n              evv.getValidMoves().forEach(function (evMove) {\n                if (evMove && evMove.y === y && evMove.x === xx) safe = false;\n              });\n            }\n          });\n        });\n        if (!safe) return;\n      }\n\n      var rochade = {\n        x: newKingX,\n        y: y,\n        movePiece: {\n          piece: self.game.board[y][rookX],\n          from: {\n            x: rookX, y: y\n          },\n          to: {\n            y: y, x: x + dir\n          }\n        }\n      };\n\n      moves.push(rochade);\n    });\n  }\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, self);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.king = function (x, y, color, game) {\n  return new King(x, y, color, game);\n};\n\nexports.Piece = Piece;\nexports.Pawn = Pawn;\nexports.Rook = Rook;\nexports.Knight = Knight;\nexports.Bishop = Bishop;\nexports.Queen = Queen;\nexports.King = King;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _game = __webpack_require__(0);\n\nvar _game2 = _interopRequireDefault(_game);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ChessAI = function ChessAI(depth, gameState, isMaximisingPlayer) {\n  // Clone the gameState to access all game associated methods.\n  // This usually doesn't make sense, but sometimes you cannot post functions to a backend or a web-worker\n  // and that's why we're touching the game methods from new game configuration intead from the passed argument.\n  // So if you pass {board: [myBoard], turn:[myTurn],...} for the game argument it will actually work!\n  // Already described here: https://github.com/RSG-Group/Chess/issues/8#issuecomment-381245794\n  var game = _game2.default.prototype.initializeGame();\n  game.board = gameState.board;\n  game.turn = gameState.turn;\n  game.threefold = gameState.threefold;\n  game.FEN = gameState.FEN;\n  game.FENboard = gameState.FENboard;\n\n  // Start looping and simulating all valid moves\n  var allMoves = game.allMoves();\n  var bestValue = -9999;\n  var bestMove;\n\n  for (var i = 0; i < allMoves.length; i++) {\n    var newGameMove = allMoves[i];\n    var undo = game.simpleMove(newGameMove);\n    var boradValue = minimax(depth - 1, game, -10000, 10000, !isMaximisingPlayer);\n    undo();\n    if (boradValue >= bestValue) {\n      bestValue = boradValue;\n      bestMove = newGameMove;\n    }\n  }\n  return bestMove;\n}; //\n// RSG Chess\n// Licensed under Apache 2.0 LICENSE\n\nvar minimax = function minimax(depth, game, alpha, beta, isMaximisingPlayer) {\n  if (depth === 0) {\n    return -evaluateBoard(game.board);\n  }\n\n  var allMoves = game.allMoves();\n  if (isMaximisingPlayer) {\n    var bestValue = -9999;\n    for (var i = 0; i < allMoves.length; i++) {\n      var undo = game.simpleMove(allMoves[i]);\n      bestValue = Math.max(bestValue, minimax(depth - 1, game, alpha, beta, !isMaximisingPlayer));\n      undo();\n      alpha = Math.max(alpha, bestValue);\n      if (beta <= alpha) {\n        return bestValue;\n      }\n    }\n    return bestValue;\n  } else {\n    var _bestValue = 9999;\n    for (var _i = 0; _i < allMoves.length; _i++) {\n      var _undo = game.simpleMove(allMoves[_i]);\n      _bestValue = Math.min(_bestValue, minimax(depth - 1, game, alpha, beta, !isMaximisingPlayer));\n      _undo();\n      beta = Math.min(beta, _bestValue);\n      if (beta <= alpha) {\n        return _bestValue;\n      }\n    }\n    return _bestValue;\n  }\n};\n\nvar evaluateBoard = function evaluateBoard(board) {\n  var totalEvaluation = 0;\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      // calculate the current evaluation\n      totalEvaluation = totalEvaluation + getPieceValue(board[i][j]);\n    }\n  }\n  // return the total evaluation\n  return totalEvaluation;\n};\n\nvar getPieceValue = function getPieceValue(piece) {\n  if (piece === null) {\n    return 0;\n  }\n\n  // get value for every piece on the board\n  var getAbsoluteValue = function getAbsoluteValue(piece) {\n    if (piece.type === 'pawn') {\n      return 10;\n    } else if (piece.type === 'rook') {\n      return 50;\n    } else if (piece.type === 'knight') {\n      return 30;\n    } else if (piece.type === 'bishop') {\n      return 30;\n    } else if (piece.type === 'queen') {\n      return 90;\n    } else if (piece.type === 'king') {\n      return 900;\n    }\n  };\n\n  // calculate the absolute value and return it\n  var absoluteValue = getAbsoluteValue(piece, piece.color === 'W');\n  return piece.color === 'W' ? absoluteValue : -absoluteValue;\n};\n\n// export the algorithm\nexports.default = ChessAI;\n\n// Written by Radi Cho\n// RSG Chess - by RSG Group\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AI = exports.Pieces = exports.Game = undefined;\n\nvar _game = __webpack_require__(0);\n\nvar _game2 = _interopRequireDefault(_game);\n\nvar _pieces = __webpack_require__(1);\n\nvar Pieces = _interopRequireWildcard(_pieces);\n\nvar _AI = __webpack_require__(2);\n\nvar _AI2 = _interopRequireDefault(_AI);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// And export...\nexports.Game = _game2.default;\nexports.Pieces = Pieces;\nexports.AI = _AI2.default; // Let's import...\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _index = __webpack_require__(3);\n\n// initialize test game configuration\nvar game = _index.Game.prototype.initializeGame();\ngame.moveSelected(game.board[6][0], { y: 5, x: 0 }, function () {}, function () {}, false, false);\n\nvar bestAI = new _index.AI(4, game, true);\n\nconsole.log(bestAI);\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// test.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6a9a498af15414d67408","import { Piece } from './pieces.js'\r\nimport ChessAI from './AI.js'\r\n\r\nfunction Game (promoCallback) {\r\n  // the game board\r\n  this.board = []\r\n  // fill the board\r\n  for (var i = 0; i < 8; i++) {\r\n    var arrayIn = []\r\n    for (var j = 0; j < 8; j++) {\r\n      arrayIn.push(null)\r\n    }\r\n    this.board.push(arrayIn)\r\n  }\r\n\r\n  // the history of all turns\r\n  this.turn = []\r\n  // the current FEN status\r\n  this.FEN = []\r\n  // the current game configuration as FEN\r\n  this.FENboard = []\r\n  // the history of all game configurations displayed using FEN\r\n  this.threefold = []\r\n}\r\n\r\nGame.prototype.piece = function (type, x, y, color) {\r\n  var piece = Piece[type](x, y, color, this)\r\n  this.board[y][x] = piece\r\n\r\n  this.FEN = this.gameToFEN()\r\n  this.FENboard = this.boardToFEN()\r\n}\r\n\r\nGame.prototype.moveSelected = function (\r\n  selected, to, promotionCallback, checkmateCallback, playAgainstAI, comingAI, simulate\r\n) {\r\n  var x = to.x\r\n  var y = to.y\r\n\r\n  if (selected) {\r\n    var from = { x: selected.x, y: selected.y }\r\n\r\n    if (this.board[y][x] !== selected) {\r\n      var validMoves = selected.getValidMoves(!simulate)\r\n      var validMove = null\r\n\r\n      for (var i = 0; i < validMoves.length; i++) {\r\n        var vm = validMoves[i]\r\n        if (vm.x === x && vm.y === y) {\r\n          validMove = vm\r\n          break\r\n        }\r\n      }\r\n\r\n      if (!validMove) return false\r\n      var movePiece = validMove.movePiece\r\n      var take, paste, rook\r\n      if (movePiece) {\r\n        take = movePiece.from\r\n        paste = movePiece.to\r\n        if (paste === null) {\r\n          this.board[take.y][take.x] = null\r\n        } else {\r\n          rook = this.board[take.y][take.x]\r\n          this.board[paste.y][paste.x] = rook\r\n          rook.x = paste.x\r\n          rook.y = paste.y\r\n          this.board[take.y][take.x] = null\r\n        }\r\n      }\r\n\r\n      var piece = this.board[y][x] ? this.board[y][x] : null\r\n      movePiece = (movePiece ? validMove.movePiece : null)\r\n      this.turn.push({\r\n        from: from,\r\n        to: to,\r\n        color: selected.color,\r\n        type: selected.type,\r\n        piece: piece,\r\n        movePiece: movePiece\r\n      })\r\n\r\n      this.board[y][x] = selected\r\n      this.board[selected.y][selected.x] = null\r\n      this.board[y][x].x = x\r\n      this.board[y][x].y = y\r\n\r\n      this.FEN = this.gameToFEN()\r\n      this.FENboard = this.boardToFEN()\r\n      // check for threefold repetition\r\n\r\n      this.threefold.push(this.FENboard)\r\n      if (selected.type === 'pawn' || piece) this.threefold = []\r\n      if (this.threefoldCheck()) checkmateCallback('D')\r\n\r\n      // check for the fifty-move rule\r\n      if (this.halfmoveClock() >= 50) checkmateCallback('D')\r\n\r\n      // check for pawn promotion\r\n      if (selected.type === 'pawn') {\r\n        if ((selected.color === 'W' && y === 0) || (selected.color === 'B' && y === 7)) {\r\n          if (promotionCallback) {\r\n            !playAgainstAI && comingAI && selected.color === 'B'\r\n              ? this.promotePawn(selected, x, y, selected.color, 'queen')\r\n              : promotionCallback(selected, x, y, selected.color)\r\n          }\r\n        }\r\n      };\r\n\r\n      var checkmateColor = selected.color === 'W' ? 'B' : 'W'\r\n      var checkmateValue = this.checkmate(checkmateColor)\r\n      if (checkmateValue) checkmateCallback(checkmateValue)\r\n\r\n      // Play AI\r\n      if (playAgainstAI) {\r\n        var bestMove = ChessAI(playAgainstAI.depth, this, false)\r\n        this.moveSelected(\r\n          this.board[bestMove.from.y][bestMove.from.x],\r\n          bestMove.to,\r\n          promotionCallback,\r\n          checkmateCallback,\r\n          false,\r\n          true,\r\n          simulate\r\n        )\r\n      }\r\n      // end\r\n    }\r\n    selected = null\r\n    return true\r\n  }\r\n}\r\n\r\nGame.prototype.promotePawn = function (pawn, x, y, color, type) {\r\n  this.piece(type, x, y, color)\r\n}\r\n\r\nGame.prototype.simulateAndFilter = function (moves, piece) {\r\n  var validMoves = []\r\n  var self = this\r\n  var board = this.board\r\n\r\n  moves.forEach(function (move, i) {\r\n    var y = move.y\r\n    var x = move.x\r\n    var from = { x: piece.x, y: piece.y }\r\n    var movePiece = board[y][x] ? {\r\n      piece: board[y][x],\r\n      from: { x: x, y: y },\r\n      to: null\r\n    } : null\r\n\r\n    if (move.movePiece) movePiece = move.movePiece\r\n    if (movePiece) self.simpleMovePiece(movePiece.piece, movePiece.from, movePiece.to)\r\n\r\n    self.simpleMovePiece(piece, from, { x: x, y: y })\r\n    var warning = self.warning(piece.color)\r\n\r\n    // Return king\r\n    self.simpleMovePiece(piece, { x: x, y: y }, from)\r\n\r\n    // return the movePiece with simpleMovePiece() method\r\n    if (movePiece) self.simpleMovePiece(movePiece.piece, movePiece.to, movePiece.from)\r\n\r\n    if (!warning) validMoves.push(move)\r\n  })\r\n  return validMoves\r\n}\r\n\r\nGame.prototype.checkmate = function (color) {\r\n  // using let will allow us to make the code a bit simpler\r\n  for (let i = 0; i < 8; i++) {\r\n    for (let j = 0; j < 8; j++) {\r\n      if (\r\n        this.board[i][j] &&\r\n        this.board[i][j].color === color &&\r\n        this.board[i][j].getValidMoves(true).length\r\n      ) return false\r\n    }\r\n  }\r\n  if (this.warning(color)) return color\r\n  return 'D'\r\n}\r\n\r\nGame.prototype.simpleMovePiece = function (piece, from, to) {\r\n  var board = this.board\r\n  if (to) {\r\n    board[to.y][to.x] = piece\r\n    piece.x = to.x\r\n    piece.y = to.y\r\n  }\r\n  if (from) board[from.y][from.x] = null\r\n}\r\n\r\nGame.prototype.simpleMove = function (move) {\r\n  var self = this\r\n  var board = self.board\r\n  var from = move.from\r\n  var to = move.to\r\n  var piece = board[from.y][from.x]\r\n  var capturedPiece = this.board[to.y][to.x] ? this.board[to.y][to.x] : null\r\n  var movePiece = board[to.y][to.x] ? {\r\n    piece: board[to.y][to.x],\r\n    from: { x: to.x, y: to.y },\r\n    to: null\r\n  } : null\r\n\r\n  this.turn.push({\r\n    from: from,\r\n    to: { x: to.x, y: to.y },\r\n    color: move.color,\r\n    type: piece.type,\r\n    piece: capturedPiece,\r\n    movePiece: movePiece\r\n  })\r\n\r\n  if (to.movePiece) movePiece = to.movePiece\r\n  if (movePiece) self.simpleMovePiece(movePiece.piece, movePiece.from, movePiece.to)\r\n  self.simpleMovePiece(piece, from, { x: to.x, y: to.y })\r\n\r\n  return function () {\r\n    // return the current move /ev/\r\n    if (movePiece) self.simpleMovePiece(movePiece.piece, movePiece.to, movePiece.from)\r\n    self.simpleMovePiece(piece, { x: to.x, y: to.y }, from)\r\n    if (capturedPiece) board[to.y][to.x] = capturedPiece\r\n    self.turn.pop()\r\n  }\r\n}\r\n\r\nGame.prototype.warning = function (color) {\r\n  var result = false\r\n  var king\r\n\r\n  this.board.forEach(function (yyy) {\r\n    yyy.forEach(function (xxx) {\r\n      if (xxx && xxx.color === color && xxx.type === 'king') {\r\n        king = xxx\r\n      }\r\n    })\r\n  })\r\n\r\n  this.board.forEach(function (yyy) {\r\n    yyy.forEach(function (xxx) {\r\n      if (xxx && xxx.color !== color) {\r\n        xxx.getValidMoves().forEach(function (mmm) {\r\n          if (mmm.x === king.x && mmm.y === king.y) result = true\r\n        })\r\n      }\r\n    })\r\n  })\r\n  return result\r\n}\r\n\r\nGame.prototype.threefoldCheck = function () {\r\n  var threefold = this.threefold\r\n  var length = threefold.length\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    // using let will allow us to make the code simpler\r\n    let count = 0\r\n    for (var j = i + 1; j < length; j++) {\r\n      if (threefold[i] === threefold[j]) count += 1\r\n    }\r\n    if (count >= 2) return true\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nGame.prototype.pieceToAN = function (x, y) {\r\n  var xChars = 'abcdefgh'\r\n  return xChars.charAt(x) + (8 - y)\r\n}\r\n\r\n// Support FEN functions in the API\r\nGame.prototype.boardToFEN = function () {\r\n  var board = this.board\r\n\r\n  // Convert the board configuration into FEN\r\n  var FENboard = ''\r\n  var missingPieces = 0\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      if (board[i][j]) {\r\n        if (missingPieces) FENboard += missingPieces\r\n        missingPieces = 0\r\n        FENboard += board[i][j].FENname\r\n      } else {\r\n        missingPieces++\r\n      }\r\n    }\r\n    if (missingPieces) FENboard += missingPieces\r\n    missingPieces = 0\r\n    FENboard += i < 7 ? '/' : ''\r\n  }\r\n\r\n  return FENboard\r\n}\r\n\r\nGame.prototype.halfmoveClock = function () {\r\n  var turn = this.turn\r\n  var length = turn.length\r\n  var count = 0\r\n  if (turn.length === 0) return count\r\n\r\n  var ev = turn[(length - 1) - count]\r\n  while (count <= length - 1 && ev.type !== 'pawn' && !ev.piece) {\r\n    count++\r\n    ev = turn[(length - 1) - count]\r\n  }\r\n\r\n  return count\r\n}\r\n\r\nGame.prototype.activeColour = function () {\r\n  var turn = this.turn\r\n  var activeColor =\r\n    turn.length &&\r\n    turn[turn.length - 1].color === 'W' ? 'b' : 'w'\r\n\r\n  return activeColor\r\n}\r\n\r\nGame.prototype.castlingTarget = function () {\r\n  var board = this.board\r\n  var turn = this.turn\r\n  var possibleCastling = ''\r\n\r\n  var whiteKingMoved\r\n  var blackKingMoved\r\n  turn.forEach(function (turn) {\r\n    whiteKingMoved = turn.type === 'king' && turn.color === 'W'\r\n    blackKingMoved = turn.type === 'king' && turn.color === 'B'\r\n  });\r\n\r\n  [[7, 0], [0, 0], [7, 7], [0, 7]].forEach(function (props) {\r\n    var rookX = props[0]\r\n    var rookY = props[1]\r\n    var rook = board[rookY][rookX]\r\n\r\n    if (rookY === 7 && whiteKingMoved) return\r\n    if (rookY === 0 && blackKingMoved) return\r\n\r\n    // Check rook on position\r\n    if (!rook || !rook.type === 'rook') return\r\n\r\n    // Check rook hasn't moved\r\n    if (turn.some(function (ev) {\r\n      if (ev.type !== 'rook') return false\r\n      return ev.from.x === rookX && ev.from.y === rookY\r\n    })) return\r\n\r\n    var castlingSide = rookX === 0 ? 'q' : 'k'\r\n    possibleCastling += rookY === 0 ? castlingSide.toUpperCase() : castlingSide\r\n  })\r\n\r\n  if (!possibleCastling) possibleCastling = '-'\r\n  return possibleCastling\r\n}\r\n\r\nGame.prototype.enPassantTarget = function () {\r\n  var turn = this.turn\r\n  var enPassantTarget = ''\r\n\r\n  if (turn.length) {\r\n    var ev = turn[turn.length - 1]\r\n    if (ev.color === 'W' && ev.to.y === 4) {\r\n      enPassantTarget = this.pieceToAN(ev.to.x, ev.to.y + 1)\r\n    }\r\n\r\n    if (ev.color === 'B' && ev.to.y === 3) {\r\n      enPassantTarget = this.pieceToAN(ev.to.x, ev.to.y - 1)\r\n    }\r\n  }\r\n\r\n  if (!enPassantTarget) enPassantTarget = '-'\r\n  return enPassantTarget\r\n}\r\n\r\nGame.prototype.fullmoveCount = function () {\r\n  var count = 1\r\n  this.turn.forEach(function (ev) {\r\n    if (ev.color === 'B') count += 1\r\n  })\r\n\r\n  return count\r\n}\r\n\r\nGame.prototype.gameToFEN = function () {\r\n  var FEN = ''\r\n\r\n  // Check the board configuration\r\n  FEN += this.boardToFEN()\r\n\r\n  // Find the active colour\r\n  FEN += ' ' + this.activeColour()\r\n\r\n  // Check castling availability\r\n  FEN += ' ' + this.castlingTarget()\r\n\r\n  // Check the En-passant target\r\n  FEN += ' ' + this.enPassantTarget()\r\n\r\n  // Add the halfmove clock\r\n  FEN += ' ' + this.halfmoveClock()\r\n\r\n  // Add the fullmove number\r\n  FEN += ' ' + this.fullmoveCount()\r\n\r\n  /*\r\n    More information about the FEN notation:\r\n    https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation\r\n    https://chessprogramming.wikispaces.com/Forsyth-Edwards+Notation\r\n  */\r\n\r\n  return FEN\r\n}\r\n\r\n// Set up default game configuration\r\nGame.prototype.initializeGame = function () {\r\n  var defaultGame = new Game()\r\n\r\n  // Pawns:\r\n  for (var i = 0; i < 8; i++) {\r\n    defaultGame.piece('pawn', i, 6, 'W')\r\n    defaultGame.piece('pawn', i, 1, 'B')\r\n  }\r\n\r\n  // Black figs:\r\n  defaultGame.piece('rook', 0, 0, 'B')\r\n  defaultGame.piece('knight', 1, 0, 'B')\r\n  defaultGame.piece('bishop', 2, 0, 'B')\r\n  defaultGame.piece('queen', 3, 0, 'B')\r\n  defaultGame.piece('king', 4, 0, 'B')\r\n  defaultGame.piece('bishop', 5, 0, 'B')\r\n  defaultGame.piece('knight', 6, 0, 'B')\r\n  defaultGame.piece('rook', 7, 0, 'B')\r\n\r\n  // White figs:\r\n  defaultGame.piece('rook', 0, 7, 'W')\r\n  defaultGame.piece('knight', 1, 7, 'W')\r\n  defaultGame.piece('bishop', 2, 7, 'W')\r\n  defaultGame.piece('queen', 3, 7, 'W')\r\n  defaultGame.piece('king', 4, 7, 'W')\r\n  defaultGame.piece('bishop', 5, 7, 'W')\r\n  defaultGame.piece('knight', 6, 7, 'W')\r\n  defaultGame.piece('rook', 7, 7, 'W')\r\n\r\n  return defaultGame\r\n}\r\n\r\nGame.prototype.allMoves = function () {\r\n  var board = this.board\r\n  var allMoves = []\r\n  var activeColour = this.activeColour().toUpperCase()\r\n\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      if (board[i][j] && board[i][j].color === activeColour) {\r\n        var validMoves = board[i][j].getValidMoves(true)\r\n        validMoves.forEach(function (ev) {\r\n          allMoves.push({\r\n            color: board[i][j].color,\r\n            from: {x: j, y: i},\r\n            to: ev,\r\n            FENname: board[i][j].FENname\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return allMoves\r\n}\r\n\r\nexport default Game\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game.js","//\r\n// RSG Chess\r\n// Licensed under Apache 2.0 LICENSE\r\n\r\nexport var PIECE_CHARS = {\r\n  pawn: { W: '♙', B: '♟' },\r\n  rook: { W: '♖', B: '♜' },\r\n  knight: { W: '♘', B: '♞' },\r\n  bishop: { W: '♗', B: '♝' },\r\n  queen: { W: '♕', B: '♛' },\r\n  king: { W: '♔', B: '♚' }\r\n}\r\n\r\nfunction Piece (x, y, charBase, color, game, type) {\r\n  if (charBase) this.char = charBase[color]\r\n  this.color = color\r\n  this.x = x\r\n  this.y = y\r\n  this.game = game\r\n  this.type = type\r\n  if (type) {\r\n    var FENname = type === 'knight' ? 'n' : type.charAt(0)\r\n    if (this.color === 'W') FENname = FENname.toUpperCase()\r\n    this.FENname = FENname\r\n  }\r\n}\r\n\r\nPiece.empty = function () {\r\n  return new Piece()\r\n}\r\n\r\nPiece.prototype.getValidMoves = function () {\r\n  return [\r\n    {x: 0, y: 0},\r\n    {x: 7, y: 7}\r\n  ]\r\n}\r\n\r\nfunction Pawn (x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.pawn, color, game, 'pawn')\r\n}\r\n\r\nPawn.prototype = Piece.empty()\r\nPawn.prototype.getValidMoves = function (simulate) {\r\n  var game = this.game\r\n  var moves = []\r\n  /* eslint-disable */\r\n  var y = this.y, x = this.x\r\n  var board = game.board, turn = game.turn, length = turn.length\r\n  var last, turnTo, turnFrom, figX, passantLast, passantFig\r\n  var colorY = this.color === 'W' ? y - 1 : y + 1  \r\n  var colorY2 = this.color === 'W' ? y - 2 : y + 2  \r\n  var passantY2 = this.color === 'W' ? 3 : 4  \r\n  var figXArray = [x - 1, x + 1]\r\n  /* eslint-enable */\r\n\r\n  if (colorY < 8 && colorY >= 0 && !board[colorY][x]) {\r\n    moves.push({x: x, y: colorY})\r\n    if ((y === 1 || y === 6) && colorY2 < 8 && colorY2 >= 0 && !game.board[colorY2][x]) {\r\n      moves.push({x: x, y: colorY2})\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < 2; i++) {\r\n    figX = figXArray[i]\r\n    if (colorY < 8 && colorY >= 0 && board[colorY][figX] &&\r\n    board[colorY][figX].color !== this.color) moves.push({x: figX, y: colorY})\r\n  }\r\n\r\n  // Check for en-passant\r\n  for (let i = 0; i < 2; i++) {\r\n    figX = figXArray[i]\r\n    last = turn[length - 1]\r\n\r\n    if (\r\n      last && last.type === 'pawn' && last.to.x === figX && last.to.y === y &&\r\n      last.color !== this.color && (last.from.y === 1 || last.from.y === 6) && (y === 3 || y === 4)\r\n    ) {\r\n      moves.push({\r\n        x: figX,\r\n        y: colorY,\r\n        movePiece: {\r\n          piece: game.board[y][figX],\r\n          from: {\r\n            x: figX,\r\n            y: y\r\n          },\r\n          to: null\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  var validMoves = []\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this)\r\n  } else {\r\n    validMoves = moves\r\n  }\r\n\r\n  return validMoves\r\n}\r\n\r\nPiece.pawn = function (x, y, color, game) {\r\n  return new Pawn(x, y, color, game)\r\n}\r\n\r\n// //\r\n\r\nfunction Rook (x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.rook, color, game, 'rook')\r\n}\r\n\r\nRook.prototype = Piece.empty()\r\nRook.prototype.getValidMoves = function (simulate) {\r\n  var game = this.game\r\n  var moves = [];\r\n\r\n  [[-1, 0], [1, 0], [0, 1], [0, -1]].forEach(function (coef) {\r\n    var index, x, y, piece\r\n    for (index = 1; ; index++) {\r\n      x = this.x + coef[0] * index\r\n      y = this.y + coef[1] * index\r\n      if (y < 0 || y > 7 || x < 0 || x > 7) break\r\n\r\n      piece = game.board[y][x]\r\n      if (piece && piece.color === this.color) break\r\n\r\n      moves.push({x: x, y: y})\r\n      if (piece) break\r\n    }\r\n  }, this)\r\n\r\n  var validMoves = []\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this)\r\n  } else {\r\n    validMoves = moves\r\n  }\r\n\r\n  return validMoves\r\n}\r\n\r\nPiece.rook = function (x, y, color, game) {\r\n  return new Rook(x, y, color, game)\r\n}\r\n\r\n// //\r\n\r\nfunction Knight (x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.knight, color, game, 'knight')\r\n}\r\n\r\nKnight.prototype = Piece.empty()\r\nKnight.prototype.getValidMoves = function (simulate) {\r\n  var game = this.game\r\n  var moves = []\r\n\r\n  var coordinates = [ [2, 1], [-2, 1], [1, 2], [-1, 2], [2, -1], [-2, -1], [1, -2], [-1, -2] ]\r\n\r\n  var one, two\r\n  for (var i = 0; i < coordinates.length; i++) {\r\n    var help = false\r\n    var boardPiece\r\n    one = coordinates[i][0]\r\n    two = coordinates[i][1]\r\n\r\n    if (this.x + one < 8 && this.x + one >= 0 && this.y + two < 8 && this.y + two >= 0) {\r\n      boardPiece = game.board[this.y + two][this.x + one]\r\n      help = boardPiece ? boardPiece.color !== this.color : true\r\n    }\r\n\r\n    if (help) {\r\n      moves.push({x: this.x + one, y: this.y + two})\r\n    }\r\n  }\r\n\r\n  var validMoves = []\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this)\r\n  } else {\r\n    validMoves = moves\r\n  }\r\n\r\n  return validMoves\r\n}\r\n\r\nPiece.knight = function (x, y, color, game) {\r\n  return new Knight(x, y, color, game)\r\n}\r\n\r\n// //\r\n\r\nfunction Bishop (x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.bishop, color, game, 'bishop')\r\n}\r\n\r\nBishop.prototype = Piece.empty()\r\nBishop.prototype.getValidMoves = function (simulate) {\r\n  var game = this.game\r\n  var moves = [];\r\n\r\n  [[-1, -1], [1, 1], [-1, 1], [1, -1]].forEach(function (coef) {\r\n    var index, x, y, piece\r\n    for (index = 1; ; index++) {\r\n      x = this.x + coef[0] * index\r\n      y = this.y + coef[1] * index\r\n      if (y < 0 || y > 7 || x < 0 || x > 7) break\r\n\r\n      piece = game.board[y][x]\r\n      if (piece && piece.color === this.color) break\r\n\r\n      moves.push({x: x, y: y})\r\n      if (piece) break\r\n    }\r\n  }, this)\r\n\r\n  var validMoves = []\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this)\r\n  } else {\r\n    validMoves = moves\r\n  }\r\n\r\n  return validMoves\r\n}\r\n\r\nPiece.bishop = function (x, y, color, game) {\r\n  return new Bishop(x, y, color, game)\r\n}\r\n\r\n// //\r\n\r\nfunction Queen (x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.queen, color, game, 'queen')\r\n}\r\n\r\nQueen.prototype = Piece.empty()\r\nQueen.prototype.getValidMoves = function (simulate) {\r\n  var game = this.game\r\n  var rookMoves = Rook.prototype.getValidMoves.call(this)\r\n  var bishopMoves = Bishop.prototype.getValidMoves.call(this)\r\n  var moves = rookMoves.concat(bishopMoves)\r\n\r\n  var validMoves = []\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this)\r\n  } else {\r\n    validMoves = moves\r\n  }\r\n\r\n  return validMoves\r\n}\r\n\r\nPiece.queen = function (x, y, color, game) {\r\n  return new Queen(x, y, color, game)\r\n}\r\n\r\n// //\r\n\r\nfunction King (x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.king, color, game, 'king')\r\n}\r\n\r\nKing.prototype = Piece.empty()\r\nKing.prototype.getValidMoves = function (simulate) {\r\n  var moves = []\r\n  var coordinates = [ [0, 1], [0, -1], [1, 1], [-1, -1], [1, -1], [-1, 1], [-1, 0], [1, 0] ]\r\n  var x = this.x\r\n  var y = this.y\r\n  var game = this.game\r\n  var turn = game.turn\r\n  var self = this\r\n\r\n  coordinates.forEach(function (coord) {\r\n    var piece\r\n    var xx = x + coord[0]\r\n    var yy = y + coord[1]\r\n\r\n    if (xx < 8 && xx >= 0 && yy < 8 && yy >= 0) {\r\n      piece = game.board[yy][xx]\r\n      if (!piece || piece.color !== self.color) {\r\n        moves.push({x: xx, y: yy})\r\n      }\r\n    }\r\n  })\r\n\r\n  // Check king hasn't moved\r\n  var kingMoved = turn.some(function (turn) {\r\n    return turn.type === 'king' && turn.color === self.color\r\n  })\r\n\r\n  if (!kingMoved) {\r\n    [[0, 2, -1], [7, 6, +1]].forEach(function (props) {\r\n      var rookX = props[0]\r\n      var newKingX = props[1]\r\n      var dir = props[2]\r\n      var rook = game.board[y][rookX]\r\n\r\n      // Check rook on position\r\n      if (!rook || !rook.type === 'rook') return\r\n\r\n      // Check rook hasn't moved\r\n      if (turn.some(function (ev) {\r\n        return ev.from.x === rookX && ev.from.y === y\r\n      })) return\r\n\r\n      // Check squares empty and safe\r\n      for (var xx = x + dir; xx !== rookX; xx += dir) {\r\n        if (game.board[y][xx]) return\r\n        var safe = true\r\n        game.board.forEach(function (ev) {\r\n          ev.forEach(function (evv) {\r\n            if (evv && evv.type !== 'king' && evv.color !== self.color) {\r\n              evv.getValidMoves().forEach(function (evMove) {\r\n                if (evMove && evMove.y === y && evMove.x === xx) safe = false\r\n              })\r\n            }\r\n          })\r\n        })\r\n        if (!safe) return\r\n      }\r\n\r\n      var rochade = {\r\n        x: newKingX,\r\n        y: y,\r\n        movePiece: {\r\n          piece: self.game.board[y][rookX],\r\n          from: {\r\n            x: rookX, y: y\r\n          },\r\n          to: {\r\n            y: y, x: x + dir\r\n          }\r\n        }\r\n      }\r\n\r\n      moves.push(rochade)\r\n    })\r\n  }\r\n\r\n  var validMoves = []\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, self)\r\n  } else {\r\n    validMoves = moves\r\n  }\r\n\r\n  return validMoves\r\n}\r\n\r\nPiece.king = function (x, y, color, game) {\r\n  return new King(x, y, color, game)\r\n}\r\n\r\nexport { Piece, Pawn, Rook, Knight, Bishop, Queen, King }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pieces.js","//\r\n// RSG Chess\r\n// Licensed under Apache 2.0 LICENSE\r\n\r\nimport Game from './game.js'\r\n\r\nconst ChessAI = function (depth, gameState, isMaximisingPlayer) {\r\n  // Clone the gameState to access all game associated methods.\r\n  // This usually doesn't make sense, but sometimes you cannot post functions to a backend or a web-worker\r\n  // and that's why we're touching the game methods from new game configuration intead from the passed argument.\r\n  // So if you pass {board: [myBoard], turn:[myTurn],...} for the game argument it will actually work!\r\n  // Already described here: https://github.com/RSG-Group/Chess/issues/8#issuecomment-381245794\r\n  var game = Game.prototype.initializeGame()\r\n  game.board = gameState.board\r\n  game.turn = gameState.turn\r\n  game.threefold = gameState.threefold\r\n  game.FEN = gameState.FEN\r\n  game.FENboard = gameState.FENboard\r\n\r\n  // Start looping and simulating all valid moves\r\n  var allMoves = game.allMoves()\r\n  var bestValue = -9999\r\n  var bestMove\r\n\r\n  for (var i = 0; i < allMoves.length; i++) {\r\n    var newGameMove = allMoves[i]\r\n    var undo = game.simpleMove(newGameMove)\r\n    var boradValue = minimax(depth - 1, game, -10000, 10000, !isMaximisingPlayer)\r\n    undo()\r\n    if (boradValue >= bestValue) {\r\n      bestValue = boradValue\r\n      bestMove = newGameMove\r\n    }\r\n  }\r\n  return bestMove\r\n}\r\n\r\nvar minimax = function (depth, game, alpha, beta, isMaximisingPlayer) {\r\n  if (depth === 0) {\r\n    return -evaluateBoard(game.board)\r\n  }\r\n\r\n  var allMoves = game.allMoves()\r\n  if (isMaximisingPlayer) {\r\n    let bestValue = -9999\r\n    for (let i = 0; i < allMoves.length; i++) {\r\n      let undo = game.simpleMove(allMoves[i])\r\n      bestValue = Math.max(bestValue, minimax(depth - 1, game, alpha, beta, !isMaximisingPlayer))\r\n      undo()\r\n      alpha = Math.max(alpha, bestValue)\r\n      if (beta <= alpha) {\r\n        return bestValue\r\n      }\r\n    }\r\n    return bestValue\r\n  } else {\r\n    let bestValue = 9999\r\n    for (let i = 0; i < allMoves.length; i++) {\r\n      let undo = game.simpleMove(allMoves[i])\r\n      bestValue = Math.min(bestValue, minimax(depth - 1, game, alpha, beta, !isMaximisingPlayer))\r\n      undo()\r\n      beta = Math.min(beta, bestValue)\r\n      if (beta <= alpha) {\r\n        return bestValue\r\n      }\r\n    }\r\n    return bestValue\r\n  }\r\n}\r\n\r\nvar evaluateBoard = function (board) {\r\n  var totalEvaluation = 0\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      // calculate the current evaluation\r\n      totalEvaluation = totalEvaluation + getPieceValue(board[i][j])\r\n    }\r\n  }\r\n  // return the total evaluation\r\n  return totalEvaluation\r\n}\r\n\r\nvar getPieceValue = function (piece) {\r\n  if (piece === null) {\r\n    return 0\r\n  }\r\n\r\n  // get value for every piece on the board\r\n  var getAbsoluteValue = function (piece) {\r\n    if (piece.type === 'pawn') {\r\n      return 10\r\n    } else if (piece.type === 'rook') {\r\n      return 50\r\n    } else if (piece.type === 'knight') {\r\n      return 30\r\n    } else if (piece.type === 'bishop') {\r\n      return 30\r\n    } else if (piece.type === 'queen') {\r\n      return 90\r\n    } else if (piece.type === 'king') {\r\n      return 900\r\n    }\r\n  }\r\n\r\n  // calculate the absolute value and return it\r\n  var absoluteValue = getAbsoluteValue(piece, piece.color === 'W')\r\n  return piece.color === 'W' ? absoluteValue : -absoluteValue\r\n}\r\n\r\n// export the algorithm\r\nexport default ChessAI\r\n\r\n// Written by Radi Cho\r\n// RSG Chess - by RSG Group\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AI.js","// Let's import...\r\nimport Game from './game'\r\nimport * as Pieces from './pieces'\r\nimport AI from './AI'\r\n\r\n// And export...\r\nexport {\r\n  Game,\r\n  Pieces,\r\n  AI\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { Game, AI } from '../src/index'\r\n\r\n// initialize test game configuration\r\nconst game = Game.prototype.initializeGame()\r\ngame.moveSelected(\r\n  game.board[6][0], { y: 5, x: 0 }, () => {}, () => {}, false, false\r\n)\r\n\r\nconst bestAI = new AI(4, game, true)\r\n\r\nconsole.log(bestAI)\r\n\n\n\n// WEBPACK FOOTER //\n// ./test/index.js"],"sourceRoot":""}