{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.js","webpack:///webpack/bootstrap 506a28b9e4517dbc71ae","webpack:///./src/pieces.js","webpack:///./src/AI.js","webpack:///./src/index.js","webpack:///./src/game.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Piece","x","y","charBase","color","game","type","char","FENname","charAt","toUpperCase","Pawn","PIECE_CHARS","pawn","Rook","rook","Knight","knight","Bishop","bishop","Queen","queen","King","king","value","W","B","empty","getValidMoves","simulate","last","figX","moves","turn","length","board","colorY","colorY2","figXArray","push","to","from","movePiece","piece","simulateAndFilter","forEach","coef","index","one","two","coordinates","boardPiece","help","rookMoves","bishopMoves","concat","coord","xx","yy","some","props","rookX","newKingX","dir","ev","safe","evv","evMove","rochade","Chess_AI","bestMove","bestValue","j","k","simpleMovePiece","boardValue","evaluateBoard","totalEvaluation","getPieceValue","absoluteValue","default","_interopRequireDefault","obj","Graphics","AI","Game","undefined","_game","_game2","_pieces","newObj","key","_AI","_AI2","promoCallback","arrayIn","FENboard","boardToFEN","threefold","moveSelected","selected","promotionCallback","checkmateCallback","playAgainstAI","validMoves","validMove","vm","take","paste","threefoldCheck","halfmoveClock","promotePawn","checkmateColor","checkmateValue","checkmate","move","warning","result","yyy","xxx","mmm","count","missingPieces"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"rsg-chess\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rsg-chess\"] = factory();\n\telse\n\t\troot[\"rsg-chess\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"rsg-chess\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rsg-chess\"] = factory();\n\telse\n\t\troot[\"rsg-chess\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//\n// RSG Chess\n// Licensed under Apache 2.0 LICENSE\n\nvar PIECE_CHARS = exports.PIECE_CHARS = {\n  pawn: { W: \"♙\", B: \"♟\" },\n  rook: { W: \"♖\", B: \"♜\" },\n  knight: { W: \"♘\", B: \"♞\" },\n  bishop: { W: \"♗\", B: \"♝\" },\n  queen: { W: \"♕\", B: \"♛\" },\n  king: { W: \"♔\", B: \"♚\" }\n};\n\nfunction Piece(x, y, charBase, color, game, type) {\n  if (charBase) this.char = charBase[color];\n  this.color = color;\n  this.x = x;\n  this.y = y;\n  this.game = game;\n  this.type = type;\n  if (type) {\n    var FENname = type === 'knight' ? 'n' : type.charAt(0);\n    if (this.color === 'W') FENname = FENname.toUpperCase();\n    this.FENname = FENname;\n  }\n}\n\nPiece.empty = function () {\n  return new Piece();\n};\n\nPiece.prototype.getValidMoves = function () {\n  return [{ x: 0, y: 0 }, { x: 7, y: 7 }];\n};\n\nfunction Pawn(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.pawn, color, game, 'pawn');\n}\n\nPawn.prototype = Piece.empty();\nPawn.prototype.getValidMoves = function (simulate) {\n  var moves = [];\n  var y = this.y;\n  var x = this.x;\n  var turn = this.game.turn;\n  var length = turn.length;\n  var board = this.game.board;\n  var last, turnTo, turnFrom, figX, passantLast, passantFig;\n  var colorY = this.color === \"W\" ? y - 1 : y + 1;\n  var colorY2 = this.color === \"W\" ? y - 2 : y + 2;\n  var passantY2 = this.color === \"W\" ? 3 : 4;\n  var figXArray = [x - 1, x + 1];\n\n  if (colorY < 8 && colorY >= 0 && !board[colorY][x]) {\n    moves.push({ x: x, y: colorY });\n    if ((y == 1 || y == 6) && colorY2 < 8 && colorY2 >= 0 && !this.game.board[colorY2][x]) {\n      moves.push({ x: x, y: colorY2 });\n    }\n  }\n\n  for (var i = 0; i < 2; i++) {\n    figX = figXArray[i];\n    if (colorY < 8 && colorY >= 0 && board[colorY][figX] && board[colorY][figX].color !== this.color) moves.push({ x: figX, y: colorY });\n  }\n\n  for (var i = 0; i < 2; i++) {\n    figX = figXArray[i];\n    last = turn[length - 1];\n\n    if (last && last.to.x === figX && last.to.y === y && last.color !== this.color && (last.from.y === 1 || last.from.y === 6) && (y === 3 || y === 4)) {\n      moves.push({\n        x: figX,\n        y: colorY,\n        movePiece: {\n          piece: this.game.board[y][figX],\n          from: {\n            x: figX,\n            y: y\n          },\n          to: null\n        }\n      });\n    }\n  }\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.pawn = function (x, y, color, game) {\n  return new Pawn(x, y, color, game);\n};\n\n// //\n\nfunction Rook(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.rook, color, game, 'rook');\n}\n\nRook.prototype = Piece.empty();\nRook.prototype.getValidMoves = function (simulate) {\n  var moves = [];\n\n  [[-1, 0], [1, 0], [0, 1], [0, -1]].forEach(function (coef) {\n    var index, x, y, piece;\n    for (index = 1;; index++) {\n      x = this.x + coef[0] * index;\n      y = this.y + coef[1] * index;\n      if (0 > y || y > 7 || 0 > x || x > 7) break;\n\n      piece = this.game.board[y][x];\n      if (piece && piece.color === this.color) break;\n\n      moves.push({ x: x, y: y });\n      if (piece) break;\n    }\n  }, this);\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.rook = function (x, y, color, game) {\n  return new Rook(x, y, color, game);\n};\n\n// //\n\nfunction Knight(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.knight, color, game, 'knight');\n}\n\nKnight.prototype = Piece.empty();\nKnight.prototype.getValidMoves = function (simulate) {\n  var moves = [];\n  var task = false;\n\n  var coordinates = [[2, 1], [-2, 1], [1, 2], [-1, 2], [2, -1], [-2, -1], [1, -2], [-1, -2]];\n\n  var one, two;\n  for (var i = 0; i < coordinates.length; i++) {\n    var help = false;\n    var boardPiece;\n    one = coordinates[i][0];\n    two = coordinates[i][1];\n\n    if (this.x + one < 8 && this.x + one >= 0 && this.y + two < 8 && this.y + two >= 0) {\n      boardPiece = this.game.board[this.y + two][this.x + one];\n      help = boardPiece ? boardPiece.color != this.color : true;\n    }\n\n    if (help) {\n      moves.push({ x: this.x + one, y: this.y + two });\n    }\n  }\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.knight = function (x, y, color, game) {\n  return new Knight(x, y, color, game);\n};\n\n// //\n\nfunction Bishop(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.bishop, color, game, 'bishop');\n}\n\nBishop.prototype = Piece.empty();\nBishop.prototype.getValidMoves = function (simulate) {\n  var moves = [];\n\n  [[-1, -1], [1, 1], [-1, 1], [1, -1]].forEach(function (coef) {\n    var index, x, y, piece;\n    for (index = 1;; index++) {\n      x = this.x + coef[0] * index;\n      y = this.y + coef[1] * index;\n      if (0 > y || y > 7 || 0 > x || x > 7) break;\n\n      piece = this.game.board[y][x];\n      if (piece && piece.color === this.color) break;\n\n      moves.push({ x: x, y: y });\n      if (piece) break;\n    }\n  }, this);\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.bishop = function (x, y, color, game) {\n  return new Bishop(x, y, color, game);\n};\n\n// //\n\nfunction Queen(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.queen, color, game, 'queen');\n}\n\nQueen.prototype = Piece.empty();\nQueen.prototype.getValidMoves = function (simulate) {\n  var rookMoves = Rook.prototype.getValidMoves.call(this);\n  var bishopMoves = Bishop.prototype.getValidMoves.call(this);\n  var moves = rookMoves.concat(bishopMoves);\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.queen = function (x, y, color, game) {\n  return new Queen(x, y, color, game);\n};\n\n// //\n\nfunction King(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.king, color, game, 'king');\n}\n\nKing.prototype = Piece.empty();\nKing.prototype.getValidMoves = function (simulate) {\n  var moves = [];\n  var rochade;\n  var coordinates = [[0, 1], [0, -1], [1, 1], [-1, -1], [1, -1], [-1, 1], [-1, 0], [1, 0]];\n  var x = this.x,\n      y = this.y;\n  var game = this.game;\n  var turn = game.turn,\n      length = turn.length;\n  var self = this;\n\n  coordinates.forEach(function (coord) {\n    var piece;\n    var xx = x + coord[0];\n    var yy = y + coord[1];\n\n    if (xx < 8 && xx >= 0 && yy < 8 && yy >= 0) {\n      piece = game.board[yy][xx];\n      if (!piece || piece.color != self.color) {\n        moves.push({ x: xx, y: yy });\n      }\n    }\n  });\n\n  // Check king hasn't moved\n  var kingMoved = turn.some(function (turn) {\n    return turn.type === 'king' && turn.color === self.color;\n  });\n\n  if (!kingMoved) {\n    [[0, 2, -1], [7, 6, +1]].forEach(function (props) {\n      var rookX = props[0];\n      var newKingX = props[1];\n      var dir = props[2];\n      var rook = game.board[y][rookX];\n\n      // Check rook on position\n      if (!rook || !rook.type === 'rook') return;\n\n      // Check rook hasn't moved\n      if (turn.some(function (ev) {\n        return ev.from.x === rookX && ev.from.y === y;\n      })) return;\n\n      // Check squares empty and safe\n      for (var xx = x + dir; xx !== rookX; xx += dir) {\n        if (game.board[y][xx]) return;\n        var safe = true;\n        game.board.forEach(function (ev) {\n          ev.forEach(function (evv) {\n            if (evv && evv.type !== \"king\" && evv.color !== self.color) {\n              evv.getValidMoves().forEach(function (evMove) {\n                if (evMove && evMove.y === y && evMove.x === xx) safe = false;\n              });\n            }\n          });\n        });\n        if (!safe) return;\n      }\n\n      var rochade = {\n        x: newKingX,\n        y: y,\n        movePiece: {\n          piece: self.game.board[y][rookX],\n          from: {\n            x: rookX, y: y\n          },\n          to: {\n            y: y, x: x + dir\n          }\n        }\n      };\n\n      moves.push(rochade);\n    });\n  }\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, self);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.king = function (x, y, color, game) {\n  return new King(x, y, color, game);\n};\n\nexports.Piece = Piece;\nexports.Pawn = Pawn;\nexports.Rook = Rook;\nexports.Knight = Knight;\nexports.Bishop = Bishop;\nexports.Queen = Queen;\nexports.King = King;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//\n// RSG Chess\n// Licensed under Apache 2.0 LICENSE\n\nvar Chess_AI = function Chess_AI(game) {\n  var board = game.board;\n  // best values /bestMove & bestValue/\n  var bestMove = null;\n  var bestValue = -9999;\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      board[i][j] && board[i][j].getValidMoves().forEach(function (ev, k) {\n        // needed variables\n        var piece = board[i][j];\n        var from = { x: piece.x, y: piece.y };\n        var movePiece = board[ev.y][ev.x] ? {\n          piece: board[ev.y][ev.x],\n          from: { x: ev.x, y: ev.y },\n          to: null\n        } : null;\n        // check for en-passant, and already captured pieces /movePiece/\n        if (ev.movePiece) movePiece = ev.movePiece;\n        if (movePiece) game.simpleMovePiece(movePiece.piece, movePiece.from, movePiece.to);\n        // simulate the current move from .getValidMoves() array /ev/\n        game.simpleMovePiece(piece, from, { x: ev.x, y: ev.y });\n        // evulate the board and get the best move /boardValue > bestValue -> bestMove = {.../\n        var boardValue = -evaluateBoard(board);\n        if (boardValue > bestValue && board[ev.y][ev.x].color === 'B') {\n          bestValue = boardValue;\n          bestMove = {\n            from: { x: j, y: i },\n            to: ev\n          };\n        }\n        // return the current move /ev/\n        game.simpleMovePiece(piece, { x: ev.x, y: ev.y }, from);\n        if (movePiece) game.simpleMovePiece(movePiece.piece, movePiece.to, movePiece.from);\n      });\n    }\n  }\n  // return the best move\n  return bestMove;\n};\n\nvar evaluateBoard = function evaluateBoard(board) {\n  var totalEvaluation = 0;\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      // calculate the current evaluation\n      totalEvaluation = totalEvaluation + getPieceValue(board[i][j]);\n    }\n  }\n  // return the total evaluation\n  return totalEvaluation;\n};\n\nvar getPieceValue = function getPieceValue(piece) {\n  if (piece === null) {\n    return 0;\n  }\n\n  // get value for every piece on the board\n  var getAbsoluteValue = function getAbsoluteValue(piece) {\n    if (piece.type === 'pawn') {\n      return 10;\n    } else if (piece.type === 'rook') {\n      return 50;\n    } else if (piece.type === 'knight') {\n      return 30;\n    } else if (piece.type === 'bishop') {\n      return 30;\n    } else if (piece.type === 'queen') {\n      return 90;\n    } else if (piece.type === 'king') {\n      return 900;\n    }\n    throw \"Unknown piece: \" + piece.type;\n  };\n\n  // calculate the absolute value and return it\n  var absoluteValue = getAbsoluteValue(piece, piece.color === 'W');\n  return piece.color === 'W' ? absoluteValue : -absoluteValue;\n};\n\n// export the algorithm\nexports.default = Chess_AI;\n\n// Written by Radi Cho\n// RSG Chess - by RSG Group\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Graphics = exports.AI = exports.Piece = exports.Game = undefined;\n\nvar _game = __webpack_require__(3);\n\nvar _game2 = _interopRequireDefault(_game);\n\nvar _pieces = __webpack_require__(0);\n\nvar Piece = _interopRequireWildcard(_pieces);\n\nvar _AI = __webpack_require__(1);\n\nvar _AI2 = _interopRequireDefault(_AI);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Graphics = \"This feature is coming soon!\";\n\n// And export...\n// Let's import...\nexports.Game = _game2.default;\nexports.Piece = Piece;\nexports.AI = _AI2.default;\nexports.Graphics = Graphics;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _pieces = __webpack_require__(0);\n\nvar _AI = __webpack_require__(1);\n\nvar _AI2 = _interopRequireDefault(_AI);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction Game(promoCallback) {\n  // the game board\n  this.board = [];\n  // fill the board\n  for (var i = 0; i < 8; i++) {\n    var arrayIn = [];\n    for (var j = 0; j < 8; j++) {\n      arrayIn.push(null);\n    }\n    this.board.push(arrayIn);\n  }\n\n  // the history of all turns\n  this.turn = [];\n  // the current game configuration as FEN\n  this.FENboard = this.boardToFEN();\n  // the history of all game configurations displayed using FEN\n  this.threefold = [];\n}\n\nGame.prototype.piece = function (type, x, y, color) {\n  var piece = _pieces.Piece[type](x, y, color, this);\n  this.board[y][x] = piece;\n};\n\nGame.prototype.moveSelected = function (selected, to, promotionCallback, checkmateCallback, playAgainstAI, simulate) {\n  var x = to.x;\n  var y = to.y;\n\n  if (selected) {\n    var from = { x: selected.x, y: selected.y };\n\n    if (this.board[y][x] != selected) {\n      var validMoves = selected.getValidMoves(!simulate);\n      var validMove = null;\n      for (var i = 0; i < validMoves.length; i++) {\n        var vm = validMoves[i];\n        if (vm.x === x && vm.y === y) {\n          validMove = vm;\n          break;\n        }\n      }\n\n      if (!validMove) return false;\n\n      var movePiece = validMove.movePiece;\n      var take, paste, rook;\n      if (movePiece) {\n        take = movePiece.from;\n        paste = movePiece.to;\n        if (paste === null) {\n          this.board[take.y][take.x] = null;\n        } else {\n          rook = this.board[take.y][take.x];\n          this.board[paste.y][paste.x] = rook;\n          rook.x = paste.x;\n          rook.y = paste.y;\n          this.board[take.y][take.x] = null;\n        }\n      }\n\n      var piece = this.board[y][x] ? this.board[y][x] : null;\n      var movePiece = movePiece ? validMove.movePiece : null;\n      this.turn.push({\n        from: from, to: to,\n        color: selected.color, type: selected.type,\n        piece: piece, movePiece: movePiece\n      });\n\n      this.board[y][x] = selected;\n      this.board[selected.y][selected.x] = null;\n      this.board[y][x].x = x;\n      this.board[y][x].y = y;\n\n      // check for threefold repetition\n      this.FENboard = this.boardToFEN();\n      this.threefold.push(this.FENboard);\n      if (selected.type === 'pawn' || piece) this.threefold = [];\n      if (this.threefoldCheck()) checkmateCallback('D');\n\n      // check for the fifty-move rule\n      if (this.halfmoveClock() >= 50) checkmateCallback('D');\n\n      // check for pawn promotion\n      if (selected.type === \"pawn\") {\n        if (selected.color === \"W\" && y === 0 || selected.color === \"B\" && y === 7) {\n          if (promotionCallback) {\n            !playAgainstAI && selected.color === \"B\" ? this.promotePawn(selected, x, y, selected.color, \"queen\") : promotionCallback(selected, x, y, selected.color);\n          }\n        }\n      };\n\n      var checkmateColor = selected.color === 'W' ? 'B' : 'W';\n      var checkmateValue = this.checkmate(checkmateColor);\n      if (checkmateValue) checkmateCallback(checkmateValue);\n\n      // Play AI\n      if (playAgainstAI) {\n        var bestMove = (0, _AI2.default)(this);\n        this.moveSelected(this.board[bestMove.from.y][bestMove.from.x], bestMove.to, promotionCallback, checkmateCallback, false, simulate);\n      }\n      // end\n    }\n    selected = null;\n    return true;\n  }\n};\n\nGame.prototype.promotePawn = function (pawn, x, y, color, type) {\n  this.piece(type, x, y, color);\n};\n\nGame.prototype.simulateAndFilter = function (moves, piece) {\n  var validMoves = [],\n      self = this,\n      turn = self.turn,\n      board = this.board;\n  moves.forEach(function (move, i) {\n    var y = move.y;\n    var x = move.x;\n    var from = { x: piece.x, y: piece.y };\n    var movePiece = board[y][x] ? {\n      piece: board[y][x],\n      from: { x: x, y: y },\n      to: null\n    } : null;\n    if (move.movePiece) movePiece = move.movePiece;\n\n    if (movePiece) self.simpleMovePiece(movePiece.piece, movePiece.from, movePiece.to);\n\n    self.simpleMovePiece(piece, from, { x: x, y: y });\n\n    var warning = self.warning(piece.color);\n\n    // Return king\n    self.simpleMovePiece(piece, { x: x, y: y }, from);\n\n    // return the movePiece with simpleMovePiece() method\n    if (movePiece) self.simpleMovePiece(movePiece.piece, movePiece.to, movePiece.from);\n\n    if (!warning) validMoves.push(move);\n  });\n  return validMoves;\n};\n\nGame.prototype.checkmate = function (color) {\n  // using let will allow us to make the code a bit simpler\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      if (this.board[i][j] && this.board[i][j].color === color && this.board[i][j].getValidMoves(true).length) return false;\n    }\n  }\n\n  if (this.warning(color)) return color;\n  return 'D';\n};\n\nGame.prototype.simpleMovePiece = function (piece, from, to) {\n  var board = this.board;\n  if (to) {\n    board[to.y][to.x] = piece;\n    piece.x = to.x;\n    piece.y = to.y;\n  }\n  if (from) board[from.y][from.x] = null;\n};\n\nGame.prototype.warning = function (color) {\n  var result = false;\n  var king;\n\n  this.board.forEach(function (yyy) {\n    yyy.forEach(function (xxx) {\n      if (xxx && xxx.color === color && xxx.type === \"king\") {\n        king = xxx;\n      }\n    });\n  });\n\n  this.board.forEach(function (yyy) {\n    yyy.forEach(function (xxx) {\n      if (xxx && xxx.color !== color) {\n        xxx.getValidMoves().forEach(function (mmm) {\n          if (mmm.x === king.x && mmm.y === king.y) result = true;\n        });\n      }\n    });\n  });\n  return result;\n};\n\nGame.prototype.threefoldCheck = function () {\n  var threefold = this.threefold;\n  var length = threefold.length;\n\n  for (var i = 0; i < length; i++) {\n    // using let will allow us to make the code simpler\n    var count = 0;\n    for (var j = i + 1; j < length; j++) {\n      if (threefold[i] === threefold[j]) count += 1;\n    }\n    if (count >= 2) return true;\n  }\n\n  return false;\n};\n\nGame.prototype.boardToFEN = function () {\n  var board = this.board;\n\n  // Convert the board configuration into FEN\n  var FENboard = '';\n  var missingPieces = 0;\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      if (board[i][j]) {\n        if (missingPieces) FENboard += missingPieces;\n        missingPieces = 0;\n        FENboard += board[i][j].FENname;\n      } else {\n        missingPieces++;\n      }\n    }\n    if (missingPieces) FENboard += missingPieces;\n    missingPieces = 0;\n    FENboard += i < 7 ? '/' : '';\n  }\n\n  /*\r\n    More information about the FEN notation:\r\n    https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation\r\n    https://chessprogramming.wikispaces.com/Forsyth-Edwards+Notation\r\n  */\n\n  return FENboard;\n};\n\nGame.prototype.halfmoveClock = function () {\n  var turn = this.turn;\n  var length = turn.length;\n  var count = 0;\n  if (turn.length === 0) return count;\n\n  var ev = turn[length - 1 - count];\n  while (count <= length - 1 && ev.type !== 'pawn' && !ev.piece) {\n    count++;\n    ev = turn[length - 1 - count];\n  }\n\n  return count;\n};\n\nexports.default = Game;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 506a28b9e4517dbc71ae","//\r\n// RSG Chess\r\n// Licensed under Apache 2.0 LICENSE\r\n\r\nexport var PIECE_CHARS = {\r\n  pawn: { W: \"♙\", B: \"♟\" },\r\n  rook: { W: \"♖\", B: \"♜\" },\r\n  knight: { W: \"♘\", B: \"♞\" },\r\n  bishop: { W: \"♗\", B: \"♝\" },\r\n  queen: { W: \"♕\", B: \"♛\" },\r\n  king: { W: \"♔\", B: \"♚\" }\r\n};\r\n\r\nfunction Piece(x, y, charBase, color, game, type) {\r\n  if (charBase) this.char = charBase[color];\r\n  this.color = color;\r\n  this.x = x;\r\n  this.y = y;\r\n  this.game = game;\r\n  this.type = type;\r\n  if (type) {\r\n    var FENname = type === 'knight' ? 'n' : type.charAt(0);\r\n    if(this.color === 'W') FENname = FENname.toUpperCase();\r\n    this.FENname = FENname;\r\n  }\r\n}\r\n\r\nPiece.empty = function () {\r\n return new Piece(); \r\n};\r\n\r\nPiece.prototype.getValidMoves = function() {\r\n  return [\r\n    {x:0, y:0},\r\n    {x:7, y:7}\r\n  ];\r\n};\r\n\r\nfunction Pawn(x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.pawn, color, game, 'pawn');\r\n}\r\n\r\nPawn.prototype = Piece.empty();\r\nPawn.prototype.getValidMoves = function(simulate) {\r\n  var moves = [];\r\n  var y = this.y;\r\n  var x = this.x;\r\n  var turn = this.game.turn;\r\n  var length = turn.length;\r\n  var board = this.game.board;\r\n  var last, turnTo, turnFrom, figX, passantLast, passantFig;\r\n  var colorY = this.color === \"W\" ? y - 1 : y + 1;  \r\n  var colorY2 = this.color === \"W\" ? y - 2 : y + 2;  \r\n  var passantY2 = this.color === \"W\" ? 3 : 4;  \r\n  var figXArray = [x - 1, x + 1];\r\n\r\n  if(colorY < 8 && colorY >= 0 && !board[colorY][x]){\r\n    moves.push({x: x, y: colorY});\r\n    if((y == 1 || y == 6) && colorY2 < 8 && colorY2 >= 0 && !this.game.board[colorY2][x]){\r\n      moves.push({x: x, y: colorY2});\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < 2; i++) {\r\n    figX = figXArray[i];\r\n    if (colorY < 8 && colorY >= 0 && board[colorY][figX] &&\r\n    board[colorY][figX].color !== this.color) moves.push({x: figX, y: colorY});\r\n  }\r\n  \r\n\r\n  for (var i = 0; i < 2; i++) {\r\n    figX = figXArray[i];\r\n    last = turn[length - 1];\r\n\r\n    if (\r\n      last && last.to.x === figX && last.to.y === y && last.color !== this.color &&\r\n      (last.from.y === 1 || last.from.y === 6) && (y === 3 || y === 4)\r\n    ) {\r\n      moves.push({\r\n        x: figX,\r\n        y: colorY,\r\n        movePiece: {\r\n          piece: this.game.board[y][figX],\r\n          from: {\r\n            x: figX,\r\n            y: y\r\n          },\r\n          to: null\r\n        }\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  var validMoves = [];\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this);\r\n  }else{\r\n    validMoves = moves;\r\n  }\r\n\r\n  return validMoves;\r\n};\r\n\r\nPiece.pawn = function(x, y, color, game) {\r\n  return new Pawn(x, y, color, game);\r\n};\r\n\r\n// //\r\n\r\nfunction Rook(x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.rook, color, game, 'rook');\r\n}\r\n\r\nRook.prototype = Piece.empty();\r\nRook.prototype.getValidMoves = function(simulate) {\r\n  var moves = [];\r\n\r\n  [[-1, 0], [1, 0], [0, 1], [0, -1]].forEach(function (coef) {\r\n    var index, x, y, piece;\r\n    for (index = 1; ; index++) {\r\n      x = this.x + coef[0] * index;\r\n      y = this.y + coef[1] * index;\r\n      if (0 > y || y > 7 || 0 > x || x > 7) break;\r\n\r\n      piece = this.game.board[y][x];\r\n      if (piece && piece.color === this.color) break;\r\n\r\n      moves.push({x: x, y: y});\r\n      if (piece) break;\r\n    }\r\n  }, this);\r\n\r\n  var validMoves = [];\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this);\r\n  }else{\r\n    validMoves = moves;\r\n  }\r\n\r\n  return validMoves;\r\n};\r\n\r\nPiece.rook = function(x, y, color, game) {\r\n  return new Rook(x, y, color, game);\r\n};\r\n\r\n// //\r\n\r\nfunction Knight(x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.knight, color, game, 'knight');\r\n}\r\n\r\nKnight.prototype = Piece.empty();\r\nKnight.prototype.getValidMoves = function(simulate) {\r\n  var moves = [];\r\n  var task = false;\r\n\r\n  var coordinates = [ [2, 1], [-2, 1], [1, 2], [-1, 2], [2, -1], [-2, -1], [1, -2], [-1, -2] ];\r\n\r\n  var one, two;\r\n  for (var i = 0; i < coordinates.length; i++) {\r\n    var help = false;\r\n    var boardPiece;\r\n    one = coordinates[i][0];\r\n    two = coordinates[i][1];\r\n    \r\n    if(this.x + one < 8 && this.x + one >= 0 && this.y + two < 8 && this.y + two >= 0){\r\n      boardPiece = this.game.board[this.y + two][this.x + one];\r\n      help = boardPiece ? boardPiece.color != this.color : true;\r\n    }\r\n    \r\n    if (help) {\r\n      moves.push({x: this.x + one, y: this.y + two});\r\n    }\r\n  }\r\n\r\n  var validMoves = [];\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this);\r\n  }else{\r\n    validMoves = moves;\r\n  }\r\n\r\n  return validMoves;\r\n};\r\n\r\nPiece.knight = function(x, y, color, game) {\r\n  return new Knight(x, y, color, game);\r\n};\r\n\r\n// //\r\n\r\nfunction Bishop(x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.bishop, color, game, 'bishop');\r\n}\r\n\r\nBishop.prototype = Piece.empty();\r\nBishop.prototype.getValidMoves = function(simulate) {\r\n  var moves = [];\r\n\r\n  [[-1, -1], [1, 1], [-1, 1], [1, -1]].forEach(function (coef) {\r\n    var index, x, y, piece;\r\n    for (index = 1; ; index++) {\r\n      x = this.x + coef[0] * index;\r\n      y = this.y + coef[1] * index;\r\n      if (0 > y || y > 7 || 0 > x || x > 7) break;\r\n\r\n      piece = this.game.board[y][x];\r\n      if (piece && piece.color === this.color) break;\r\n\r\n      moves.push({x: x, y: y});\r\n      if (piece) break;\r\n    }\r\n  }, this);\r\n\r\n  var validMoves = [];\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this);\r\n  }else{\r\n    validMoves = moves;\r\n  }\r\n\r\n  return validMoves;\r\n};\r\n\r\nPiece.bishop = function(x, y, color, game) {\r\n  return new Bishop(x, y, color, game);\r\n};\r\n\r\n// //\r\n\r\nfunction Queen(x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.queen, color, game, 'queen');\r\n}\r\n\r\nQueen.prototype = Piece.empty();\r\nQueen.prototype.getValidMoves = function (simulate) {\r\n  var rookMoves = Rook.prototype.getValidMoves.call(this);\r\n  var bishopMoves = Bishop.prototype.getValidMoves.call(this);\r\n  var moves = rookMoves.concat(bishopMoves);\r\n\r\n  var validMoves = [];\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this);\r\n  }else{\r\n    validMoves = moves;\r\n  }\r\n\r\n  return validMoves;\r\n};\r\n\r\nPiece.queen = function(x, y, color, game) {\r\n  return new Queen(x, y, color, game);\r\n};\r\n\r\n// //\r\n\r\nfunction King(x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.king, color, game, 'king');\r\n}\r\n\r\nKing.prototype = Piece.empty();\r\nKing.prototype.getValidMoves = function(simulate) {\r\n  var moves = [];\r\n  var rochade;\r\n  var coordinates = [ [0, 1], [0, -1], [1, 1], [-1, -1], [1, -1], [-1, 1], [-1, 0], [1, 0] ];\r\n  var x = this.x, y = this.y;\r\n  var game = this.game;\r\n  var turn = game.turn, length = turn.length;\r\n  var self = this;\r\n\r\n  coordinates.forEach(function (coord) {\r\n    var piece;\r\n    var xx = x + coord[0];\r\n    var yy = y + coord[1];\r\n    \r\n    if (xx < 8 && xx >= 0 && yy < 8 && yy >= 0 ) {\r\n      piece = game.board[yy][xx];\r\n      if (!piece || piece.color != self.color) {\r\n        moves.push({x: xx, y: yy});\r\n      }\r\n    }\r\n  });\r\n\r\n  // Check king hasn't moved\r\n  var kingMoved = turn.some(function (turn) {\r\n    return turn.type === 'king' && turn.color === self.color;\r\n  });\r\n\r\n  if (!kingMoved) {\r\n    [[0, 2, -1], [7, 6, +1]].forEach(function (props) {\r\n      var rookX = props[0];\r\n      var newKingX = props[1];\r\n      var dir = props[2];\r\n      var rook = game.board[y][rookX];\r\n\r\n      // Check rook on position\r\n      if (!rook || !rook.type === 'rook') return;\r\n\r\n      // Check rook hasn't moved\r\n      if (turn.some(function (ev) {\r\n        return ev.from.x === rookX && ev.from.y === y;\r\n      })) return;\r\n\r\n      // Check squares empty and safe\r\n      for (var xx = x + dir; xx !== rookX; xx += dir) {\r\n        if (game.board[y][xx]) return;\r\n        var safe = true;\r\n        game.board.forEach(function (ev) {\r\n          ev.forEach(function (evv) {\r\n            if (evv && evv.type !== \"king\" && evv.color !== self.color) {\r\n              evv.getValidMoves().forEach(function(evMove){\r\n                if(evMove && evMove.y === y && evMove.x === xx) safe = false;\r\n              });\r\n            }\r\n          });\r\n        });\r\n        if(!safe) return;\r\n      }\r\n\r\n      var rochade = {\r\n        x: newKingX,\r\n        y: y,\r\n        movePiece: {\r\n          piece: self.game.board[y][rookX],\r\n          from: {\r\n            x: rookX, y: y\r\n          },\r\n          to: {\r\n            y: y, x: x + dir\r\n          }\r\n        }\r\n      }\r\n\r\n      moves.push( rochade )\r\n    });\r\n  }\r\n\r\n  var validMoves = [];\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, self);\r\n  }else{\r\n    validMoves = moves;\r\n  }\r\n\r\n  return validMoves;\r\n};\r\n\r\nPiece.king = function(x, y, color, game) {\r\n  return new King(x, y, color, game);\r\n};\r\n\r\nexport { Piece, Pawn, Rook, Knight, Bishop, Queen, King };\n\n\n// WEBPACK FOOTER //\n// ./src/pieces.js","//\r\n// RSG Chess\r\n// Licensed under Apache 2.0 LICENSE\r\n\r\nconst Chess_AI = function (game){\r\n  var board = game.board;\r\n  // best values /bestMove & bestValue/\r\n  var bestMove = null;\r\n  var bestValue = -9999;\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      board[i][j] && \r\n      board[i][j].getValidMoves()\r\n      .forEach(function(ev, k){\r\n        // needed variables\r\n        var piece = board[i][j]\r\n        var from = { x: piece.x, y: piece.y };\r\n        var movePiece = board[ev.y][ev.x] ? {\r\n          piece: board[ev.y][ev.x],\r\n          from: { x: ev.x, y: ev.y },\r\n          to: null\r\n        } : null;\r\n        // check for en-passant, and already captured pieces /movePiece/\r\n        if(ev.movePiece) movePiece = ev.movePiece;\r\n        if(movePiece) game.simpleMovePiece(movePiece.piece, movePiece.from, movePiece.to);\r\n        // simulate the current move from .getValidMoves() array /ev/\r\n        game.simpleMovePiece(piece, from, { x: ev.x, y: ev.y });\r\n        // evulate the board and get the best move /boardValue > bestValue -> bestMove = {.../\r\n        var boardValue = -evaluateBoard(board);\r\n        if (\r\n          boardValue > bestValue &&\r\n          board[ev.y][ev.x].color === 'B'\r\n        ) {\r\n          bestValue = boardValue;\r\n          bestMove = {\r\n            from: {x: j, y: i},\r\n            to: ev\r\n          };\r\n        }\r\n        // return the current move /ev/\r\n        game.simpleMovePiece(piece, { x: ev.x, y: ev.y }, from);\r\n        if(movePiece) game.simpleMovePiece(movePiece.piece, movePiece.to, movePiece.from);\r\n      })\r\n    }\r\n  }\r\n  // return the best move\r\n  return bestMove;\r\n};\r\n\r\nvar evaluateBoard = function (board) {\r\n  var totalEvaluation = 0;\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      // calculate the current evaluation\r\n      totalEvaluation = totalEvaluation + getPieceValue(board[i][j]);\r\n    }\r\n  }\r\n  // return the total evaluation\r\n  return totalEvaluation;\r\n};\r\n\r\nvar getPieceValue = function (piece) {\r\n  if (piece === null) {\r\n    return 0;\r\n  }\r\n\r\n  // get value for every piece on the board\r\n  var getAbsoluteValue = function (piece) {\r\n    if (piece.type === 'pawn') {\r\n      return 10;\r\n    } else if (piece.type === 'rook') {\r\n      return 50;\r\n    } else if (piece.type === 'knight') {\r\n      return 30;\r\n    } else if (piece.type === 'bishop') {\r\n      return 30 ;\r\n    } else if (piece.type === 'queen') {\r\n      return 90;\r\n    } else if (piece.type === 'king') {\r\n      return 900;\r\n    }\r\n    throw \"Unknown piece: \" + piece.type;\r\n  };\r\n\r\n  // calculate the absolute value and return it\r\n  var absoluteValue = getAbsoluteValue(piece, piece.color === 'W');\r\n  return piece.color === 'W' ? absoluteValue : -absoluteValue;\r\n};\r\n\r\n// export the algorithm\r\nexport default Chess_AI\r\n\r\n// Written by Radi Cho\r\n// RSG Chess - by RSG Group\n\n\n// WEBPACK FOOTER //\n// ./src/AI.js","// Let's import...\r\nimport Game from \"./game\";\r\nimport * as Piece from \"./pieces\";\r\nimport AI from \"./AI\";\r\n\r\nconst Graphics = \"This feature is coming soon!\"\r\n\r\n// And export...\r\nexport {\r\n  Game,\r\n  Piece,\r\n  AI,\r\n  Graphics\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { Piece }    from './pieces.js';\r\nimport Chess_AI from './AI.js';\r\n\r\nfunction Game(promoCallback) {\r\n  // the game board\r\n  this.board = [];\r\n  // fill the board\r\n  for (var i = 0; i < 8; i++) {\r\n    var arrayIn = [];\r\n    for (var j = 0; j < 8; j++) {\r\n      arrayIn.push(null);\r\n    }\r\n    this.board.push(arrayIn);\r\n  }\r\n\r\n  // the history of all turns\r\n  this.turn = [];\r\n  // the current game configuration as FEN\r\n  this.FENboard = this.boardToFEN();\r\n  // the history of all game configurations displayed using FEN\r\n  this.threefold = [];\r\n}\r\n\r\nGame.prototype.piece = function (type, x, y, color) {\r\n  var piece = Piece[type](x, y, color, this);\r\n  this.board[y][x] = piece;\r\n};\r\n\r\nGame.prototype.moveSelected = function (\r\n  selected, to, promotionCallback, checkmateCallback, playAgainstAI, simulate\r\n) {\r\n  var x = to.x;\r\n  var y = to.y;\r\n\r\n  if (selected) {\r\n    var from = { x: selected.x, y: selected.y };\r\n\r\n    if (this.board[y][x] != selected) {\r\n      var validMoves = selected.getValidMoves(!simulate);\r\n      var validMove = null;\r\n      for (var i = 0; i < validMoves.length; i++) {\r\n        var vm = validMoves[i];\r\n        if (vm.x === x && vm.y === y ) {\r\n          validMove = vm;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!validMove) return false;\r\n      \r\n      var movePiece = validMove.movePiece;\r\n      var take, paste, rook;\r\n      if (movePiece) {\r\n        take = movePiece.from;\r\n        paste = movePiece.to;\r\n        if (paste === null){\r\n          this.board[take.y][take.x] = null;\r\n        }else{\r\n          rook = this.board[take.y][take.x];\r\n          this.board[paste.y][paste.x] = rook;\r\n          rook.x = paste.x;\r\n          rook.y = paste.y;\r\n          this.board[take.y][take.x] = null;\r\n        }\r\n      }\r\n      \r\n      var piece = this.board[y][x] ? this.board[y][x] : null;\r\n      var movePiece = (movePiece ? validMove.movePiece : null);\r\n      this.turn.push({\r\n        from: from, to: to,\r\n        color: selected.color, type: selected.type,\r\n        piece: piece, movePiece: movePiece\r\n      });\r\n      \r\n      this.board[y][x] = selected;\r\n      this.board[selected.y][selected.x] = null;\r\n      this.board[y][x].x = x;\r\n      this.board[y][x].y = y;\r\n\r\n      // check for threefold repetition\r\n      this.FENboard = this.boardToFEN();\r\n      this.threefold.push(this.FENboard);\r\n      if (selected.type === 'pawn' || piece) this.threefold = [];\r\n      if(this.threefoldCheck()) checkmateCallback('D');\r\n\r\n      // check for the fifty-move rule\r\n      if (this.halfmoveClock() >= 50) checkmateCallback('D');\r\n\r\n      // check for pawn promotion\r\n      if (selected.type === \"pawn\") {\r\n        if ((selected.color === \"W\" && y === 0) || (selected.color === \"B\" && y === 7)) {\r\n          if(promotionCallback) {\r\n            !playAgainstAI && selected.color === \"B\" ?\r\n              this.promotePawn(selected, x, y, selected.color, \"queen\"):\r\n              promotionCallback(selected, x, y, selected.color);\r\n          }\r\n        }\r\n      };\r\n      \r\n      var checkmateColor = selected.color === 'W' ? 'B' : 'W';\r\n      var checkmateValue = this.checkmate(checkmateColor);\r\n      if(checkmateValue) checkmateCallback(checkmateValue);\r\n\r\n      // Play AI\r\n      if (playAgainstAI) {\r\n        var bestMove = Chess_AI(this);\r\n        this.moveSelected(\r\n          this.board[bestMove.from.y][bestMove.from.x],\r\n          bestMove.to,\r\n          promotionCallback,\r\n          checkmateCallback,\r\n          false,\r\n          simulate\r\n        )\r\n      }\r\n      // end\r\n    }\r\n    selected = null;\r\n    return true;\r\n  }\r\n};\r\n\r\nGame.prototype.promotePawn = function (pawn, x, y, color, type) {\r\n  this.piece(type, x, y, color);\r\n};\r\n\r\nGame.prototype.simulateAndFilter = function (moves, piece) {\r\n  var validMoves = [], self = this, turn = self.turn, board = this.board;\r\n  moves.forEach(function (move, i) {\r\n    var y = move.y;\r\n    var x = move.x;\r\n    var from = { x: piece.x, y: piece.y };\r\n    var movePiece = board[y][x] ? {\r\n      piece: board[y][x],\r\n      from: { x: x, y: y },\r\n      to: null\r\n    } : null;\r\n    if(move.movePiece) movePiece = move.movePiece;\r\n\r\n    if(movePiece) self.simpleMovePiece(movePiece.piece, movePiece.from, movePiece.to);\r\n\r\n    self.simpleMovePiece(piece, from, { x: x, y: y });\r\n\r\n    var warning = self.warning(piece.color);\r\n\r\n    // Return king\r\n    self.simpleMovePiece(piece, { x: x, y: y }, from);\r\n\r\n    // return the movePiece with simpleMovePiece() method\r\n    if(movePiece) self.simpleMovePiece(movePiece.piece, movePiece.to, movePiece.from);\r\n    \r\n    if (!warning) validMoves.push(move);\r\n  });\r\n  return validMoves;\r\n}\r\n\r\nGame.prototype.checkmate = function(color){\r\n  // using let will allow us to make the code a bit simpler\r\n  for(let i = 0; i < 8; i++){\r\n\t\tfor(let j = 0; j < 8; j++){\r\n\t\t\tif (\r\n        this.board[i][j] &&\r\n        this.board[i][j].color === color &&\r\n        this.board[i][j].getValidMoves(true).length\r\n      ) return false;\r\n\t\t}\r\n  }\r\n  \r\n  if (this.warning(color)) return color;\r\n\treturn 'D';\r\n}\r\n\r\nGame.prototype.simpleMovePiece = function(piece, from, to){\r\n  var board = this.board;\r\n  if(to) {\r\n    board[to.y][to.x] = piece;\r\n    piece.x = to.x;\r\n    piece.y = to.y;\r\n  }\r\n  if(from) board[from.y][from.x] = null;\r\n}\r\n\r\nGame.prototype.warning = function (color) {\r\n  var result = false;\r\n  var king;\r\n\r\n  this.board.forEach(function(yyy){\r\n    yyy.forEach(function(xxx){\r\n      if(xxx && xxx.color === color && xxx.type === \"king\") {\r\n        king = xxx;\r\n      }\r\n    })\r\n  })\r\n\r\n  this.board.forEach(function(yyy){\r\n    yyy.forEach(function(xxx){\r\n      if(xxx && xxx.color !== color) {\r\n        xxx.getValidMoves().forEach(function(mmm){\r\n          if(mmm.x === king.x && mmm.y === king.y) result = true;\r\n        })\r\n      }\r\n    })\r\n  })\r\n  return result;\r\n};\r\n\r\nGame.prototype.threefoldCheck = function () {\r\n  var threefold = this.threefold;\r\n  var length = threefold.length;\r\n\r\n  for(var i = 0; i < length; i++){\r\n    // using let will allow us to make the code simpler\r\n    let count = 0;\r\n    for (var j = i + 1; j < length; j++) {\r\n      if(threefold[i] === threefold[j]) count += 1;\r\n    }\r\n    if(count >= 2) return true;\r\n  }\r\n  \r\n  return false;\r\n}\r\n\r\nGame.prototype.boardToFEN = function () {\r\n  var board = this.board;\r\n \r\n  // Convert the board configuration into FEN\r\n  var FENboard = '';\r\n  var missingPieces = 0;\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      if(board[i][j]) {\r\n        if (missingPieces) FENboard += missingPieces;\r\n        missingPieces = 0;\r\n        FENboard += board[i][j].FENname;\r\n      } else {\r\n        missingPieces++;\r\n      }\r\n    }\r\n    if (missingPieces) FENboard += missingPieces;\r\n    missingPieces = 0;    \r\n    FENboard += i < 7 ? '/' : '';\r\n  }\r\n \r\n  /*\r\n    More information about the FEN notation:\r\n    https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation\r\n    https://chessprogramming.wikispaces.com/Forsyth-Edwards+Notation\r\n  */\r\n \r\n  return FENboard;\r\n};\r\n\r\nGame.prototype.halfmoveClock = function () {\r\n  var turn = this.turn;\r\n  var length = turn.length;\r\n  var count = 0;\r\n  if (turn.length === 0) return count;\r\n\r\n  var ev = turn[(length - 1) - count];\r\n  while(count <= length - 1 && ev.type !== 'pawn' && !ev.piece){\r\n    count++;\r\n    ev = turn[(length - 1) - count]; \r\n  }\r\n\r\n  return count;\r\n}\r\n\r\nexport default Game;\n\n\n// WEBPACK FOOTER //\n// ./src/game.js"],"sourceRoot":""}