{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.js","webpack:///webpack/bootstrap 131325800af5eee263fa","webpack:///./src/pieces.js","webpack:///./src/AI.js","webpack:///./src/index.js","webpack:///./src/game.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Piece","x","y","charBase","color","game","type","char","FENname","charAt","toUpperCase","Pawn","PIECE_CHARS","pawn","Rook","rook","Knight","knight","Bishop","bishop","Queen","queen","King","king","value","W","B","empty","getValidMoves","simulate","last","figX","moves","board","turn","length","colorY","colorY2","figXArray","push","to","from","movePiece","piece","simulateAndFilter","forEach","coef","index","one","two","coordinates","boardPiece","help","rookMoves","bishopMoves","concat","coord","xx","yy","some","props","rookX","newKingX","dir","ev","safe","evv","evMove","rochade","ChessAI","bestMove","bestValue","allMoves","simpleMovePiece","boardValue","evaluateBoard","totalEvaluation","j","getPieceValue","absoluteValue","default","_interopRequireDefault","obj","Graphics","AI","Game","undefined","_game","_game2","_pieces","newObj","key","_AI","_AI2","promoCallback","arrayIn","FEN","FENboard","threefold","gameToFEN","boardToFEN","moveSelected","selected","promotionCallback","checkmateCallback","playAgainstAI","validMoves","validMove","vm","take","paste","threefoldCheck","halfmoveClock","promotePawn","checkmateColor","checkmateValue","checkmate","move","warning","result","yyy","xxx","mmm","count","pieceToAN","missingPieces","activeColour","castlingTarget","whiteKingMoved","blackKingMoved","possibleCastling","rookY","castlingSide","enPassantTarget","fullmoveCount","initializeGame","defaultGame"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,eAAAH,GACA,gBAAAC,SACAA,QAAA,aAAAD,IAEAD,EAAA,aAAAC,KACC,mBAAAK,WAAAC,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAR,OAGA,IAAAC,GAAAQ,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAX,WAUA,OANAM,GAAAE,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAU,GAAA,EAGAV,EAAAD,QAvBA,GAAAS,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAM,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,KDgBM,SAAU9B,EAAQD,EAASO,GAEjC,YElEA,SAASyB,GAAOC,EAAGC,EAAGC,EAAUC,EAAOC,EAAMC,GAO3C,GANIH,IAAU9B,KAAKkC,KAAOJ,EAASC,IACnC/B,KAAK+B,MAAQA,EACb/B,KAAK4B,EAAIA,EACT5B,KAAK6B,EAAIA,EACT7B,KAAKgC,KAAOA,EACZhC,KAAKiC,KAAOA,EACRA,EAAM,CACR,GAAIE,GAAmB,WAATF,EAAoB,IAAMA,EAAKG,OAAO,EACjC,OAAfpC,KAAK+B,QAAeI,EAAUA,EAAQE,eAC1CrC,KAAKmC,QAAUA,GAenB,QAASG,GAAMV,EAAGC,EAAGE,EAAOC,GAC1BL,EAAMpB,KAAKP,KAAM4B,EAAGC,EAAGU,EAAYC,KAAMT,EAAOC,EAAM,QAqExD,QAASS,GAAMb,EAAGC,EAAGE,EAAOC,GAC1BL,EAAMpB,KAAKP,KAAM4B,EAAGC,EAAGU,EAAYG,KAAMX,EAAOC,EAAM,QAuCxD,QAASW,GAAQf,EAAGC,EAAGE,EAAOC,GAC5BL,EAAMpB,KAAKP,KAAM4B,EAAGC,EAAGU,EAAYK,OAAQb,EAAOC,EAAM,UA2C1D,QAASa,GAAQjB,EAAGC,EAAGE,EAAOC,GAC5BL,EAAMpB,KAAKP,KAAM4B,EAAGC,EAAGU,EAAYO,OAAQf,EAAOC,EAAM,UAuC1D,QAASe,GAAOnB,EAAGC,EAAGE,EAAOC,GAC3BL,EAAMpB,KAAKP,KAAM4B,EAAGC,EAAGU,EAAYS,MAAOjB,EAAOC,EAAM,SA0BzD,QAASiB,GAAMrB,EAAGC,EAAGE,EAAOC,GAC1BL,EAAMpB,KAAKP,KAAM4B,EAAGC,EAAGU,EAAYW,KAAMnB,EAAOC,EAAM,QFlLxDlB,OAAOC,eAAepB,EAAS,cAC7BwD,OAAO,GE/EF,IAAIZ,kBACTC,MAAQY,EAAG,IAAKC,EAAG,KACnBX,MAAQU,EAAG,IAAKC,EAAG,KACnBT,QAAUQ,EAAG,IAAKC,EAAG,KACrBP,QAAUM,EAAG,IAAKC,EAAG,KACrBL,OAASI,EAAG,IAAKC,EAAG,KACpBH,MAAQE,EAAG,IAAKC,EAAG,KAiBrB1B,GAAM2B,MAAQ,WACZ,MAAO,IAAI3B,IAGbA,EAAMJ,UAAUgC,cAAgB,WAC9B,QACG3B,EAAG,EAAGC,EAAG,IACTD,EAAG,EAAGC,EAAG,KAQdS,EAAKf,UAAYI,EAAM2B,QACvBhB,EAAKf,UAAUgC,cAAgB,SAAUC,GACvC,GAKIC,GAAwBC,EALxB1B,EAAOhC,KAAKgC,KACZ2B,KAEA9B,EAAI7B,KAAK6B,EAAGD,EAAI5B,KAAK4B,EACrBgC,EAAQ5B,EAAK4B,MAAOC,EAAO7B,EAAK6B,KAAMC,EAASD,EAAKC,OAEpDC,EAAwB,MAAf/D,KAAK+B,MAAgBF,EAAI,EAAIA,EAAI,EAC1CmC,EAAyB,MAAfhE,KAAK+B,MAAgBF,EAAI,EAAIA,EAAI,EAE3CoC,GADYjE,KAAK+B,OACJH,EAAI,EAAGA,EAAI,GAGxBmC,GAAS,GAAKA,GAAU,IAAMH,EAAMG,GAAQnC,KAC9C+B,EAAMO,MAAMtC,EAAGA,EAAGC,EAAGkC,KACV,IAANlC,GAAiB,IAANA,IAAYmC,EAAU,GAAKA,GAAW,IAAMhC,EAAK4B,MAAMI,GAASpC,IAC9E+B,EAAMO,MAAMtC,EAAGA,EAAGC,EAAGmC,IAIzB,KAAK,GAAI3D,GAAI,EAAGA,EAAI,EAAGA,IACrBqD,EAAOO,EAAU5D,GACb0D,EAAS,GAAKA,GAAU,GAAKH,EAAMG,GAAQL,IAC/CE,EAAMG,GAAQL,GAAM3B,QAAU/B,KAAK+B,OAAO4B,EAAMO,MAAMtC,EAAG8B,EAAM7B,EAAGkC,GAGpE,KAAK,GAAI1D,GAAI,EAAGA,EAAI,EAAGA,IACrBqD,EAAOO,EAAU5D,KACjBoD,EAAOI,EAAKC,EAAS,KAGXL,EAAKU,GAAGvC,IAAM8B,GAAQD,EAAKU,GAAGtC,IAAMA,GAAK4B,EAAK1B,QAAU/B,KAAK+B,OACpD,IAAhB0B,EAAKW,KAAKvC,GAA2B,IAAhB4B,EAAKW,KAAKvC,GAAmB,IAANA,GAAiB,IAANA,GAExD8B,EAAMO,MACJtC,EAAG8B,EACH7B,EAAGkC,EACHM,WACEC,MAAOtC,EAAK4B,MAAM/B,GAAG6B,GACrBU,MACExC,EAAG8B,EACH7B,EAAGA,GAELsC,GAAI,OAaZ,OANIX,GACWxB,EAAKuC,kBAAkBZ,EAAO3D,MAE9B2D,GAMjBhC,EAAMa,KAAO,SAAUZ,EAAGC,EAAGE,EAAOC,GAClC,MAAO,IAAIM,GAAKV,EAAGC,EAAGE,EAAOC,IAS/BS,EAAKlB,UAAYI,EAAM2B,QACvBb,EAAKlB,UAAUgC,cAAgB,SAAUC,GACvC,GAAIxB,GAAOhC,KAAKgC,KACZ2B,QAED,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GAAI,IAAIa,QAAQ,SAAUC,GACnD,GAAIC,GAAO9C,EAAGC,EAAGyC,CACjB,KAAKI,EAAQ,GACX9C,EAAI5B,KAAK4B,EAAI6C,EAAK,GAAKC,KACvB7C,EAAI7B,KAAK6B,EAAI4C,EAAK,GAAKC,GACf,GAAK7C,EAAI,GAAKD,EAAI,GAAKA,EAAI,QAEnC0C,EAAQtC,EAAK4B,MAAM/B,GAAGD,KACT0C,EAAMvC,QAAU/B,KAAK+B,SAElC4B,EAAMO,MAAMtC,EAAGA,EAAGC,EAAGA,KACjByC,GATYI,OAWjB1E,KASH,OANIwD,GACWxB,EAAKuC,kBAAkBZ,EAAO3D,MAE9B2D,GAMjBhC,EAAMe,KAAO,SAAUd,EAAGC,EAAGE,EAAOC,GAClC,MAAO,IAAIS,GAAKb,EAAGC,EAAGE,EAAOC,IAS/BW,EAAOpB,UAAYI,EAAM2B,QACzBX,EAAOpB,UAAUgC,cAAgB,SAAUC,GAOzC,IAAK,GADDmB,GAAKC,EALL5C,EAAOhC,KAAKgC,KACZ2B,KAEAkB,IAAiB,EAAG,KAAM,EAAG,IAAK,EAAG,KAAM,EAAG,IAAK,GAAI,KAAM,GAAI,IAAK,GAAI,KAAM,GAAI,IAG/ExE,EAAI,EAAGA,EAAIwE,EAAYf,OAAQzD,IAAK,CAC3C,GACIyE,GADAC,GAAO,CAEXJ,GAAME,EAAYxE,GAAG,GACrBuE,EAAMC,EAAYxE,GAAG,GAEjBL,KAAK4B,EAAI+C,EAAM,GAAK3E,KAAK4B,EAAI+C,GAAO,GAAK3E,KAAK6B,EAAI+C,EAAM,GAAK5E,KAAK6B,EAAI+C,GAAO,IAC/EE,EAAa9C,EAAK4B,MAAM5D,KAAK6B,EAAI+C,GAAK5E,KAAK4B,EAAI+C,GAC/CI,GAAOD,GAAaA,EAAW/C,QAAU/B,KAAK+B,OAG5CgD,GACFpB,EAAMO,MAAMtC,EAAG5B,KAAK4B,EAAI+C,EAAK9C,EAAG7B,KAAK6B,EAAI+C,IAW7C,MANIpB,GACWxB,EAAKuC,kBAAkBZ,EAAO3D,MAE9B2D,GAMjBhC,EAAMiB,OAAS,SAAUhB,EAAGC,EAAGE,EAAOC,GACpC,MAAO,IAAIW,GAAOf,EAAGC,EAAGE,EAAOC,IASjCa,EAAOtB,UAAYI,EAAM2B,QACzBT,EAAOtB,UAAUgC,cAAgB,SAAUC,GACzC,GAAIxB,GAAOhC,KAAKgC,KACZ2B,QAED,GAAI,IAAK,EAAG,KAAM,EAAG,IAAK,GAAI,IAAIa,QAAQ,SAAUC,GACrD,GAAIC,GAAO9C,EAAGC,EAAGyC,CACjB,KAAKI,EAAQ,GACX9C,EAAI5B,KAAK4B,EAAI6C,EAAK,GAAKC,KACvB7C,EAAI7B,KAAK6B,EAAI4C,EAAK,GAAKC,GACf,GAAK7C,EAAI,GAAKD,EAAI,GAAKA,EAAI,QAEnC0C,EAAQtC,EAAK4B,MAAM/B,GAAGD,KACT0C,EAAMvC,QAAU/B,KAAK+B,SAElC4B,EAAMO,MAAMtC,EAAGA,EAAGC,EAAGA,KACjByC,GATYI,OAWjB1E,KASH,OANIwD,GACWxB,EAAKuC,kBAAkBZ,EAAO3D,MAE9B2D,GAMjBhC,EAAMmB,OAAS,SAAUlB,EAAGC,EAAGE,EAAOC,GACpC,MAAO,IAAIa,GAAOjB,EAAGC,EAAGE,EAAOC,IASjCe,EAAMxB,UAAYI,EAAM2B,QACxBP,EAAMxB,UAAUgC,cAAgB,SAAUC,GACxC,GAAIxB,GAAOhC,KAAKgC,KACZgD,EAAYvC,EAAKlB,UAAUgC,cAAchD,KAAKP,MAC9CiF,EAAcpC,EAAOtB,UAAUgC,cAAchD,KAAKP,MAClD2D,EAAQqB,EAAUE,OAAOD,EAS7B,OANIzB,GACWxB,EAAKuC,kBAAkBZ,EAAO3D,MAE9B2D,GAMjBhC,EAAMqB,MAAQ,SAAUpB,EAAGC,EAAGE,EAAOC,GACnC,MAAO,IAAIe,GAAMnB,EAAGC,EAAGE,EAAOC,IAShCiB,EAAK1B,UAAYI,EAAM2B,QACvBL,EAAK1B,UAAUgC,cAAgB,SAAUC,GACvC,GAAIG,MACAkB,IAAiB,EAAG,IAAK,GAAI,IAAK,EAAG,KAAM,GAAI,IAAK,GAAI,KAAM,EAAG,KAAM,EAAG,IAAK,EAAG,IAClFjD,EAAI5B,KAAK4B,EACTC,EAAI7B,KAAK6B,EACTG,EAAOhC,KAAKgC,KACZ6B,EAAO7B,EAAK6B,KACZ9D,EAAOC,IAEX6E,GAAYL,QAAQ,SAAUW,GAC5B,GAAIb,GACAc,EAAKxD,EAAIuD,EAAM,GACfE,EAAKxD,EAAIsD,EAAM,EAEfC,GAAK,GAAKA,GAAM,GAAKC,EAAK,GAAKA,GAAM,KACvCf,EAAQtC,EAAK4B,MAAMyB,GAAID,KACTd,EAAMvC,QAAUhC,EAAKgC,OACjC4B,EAAMO,MAAMtC,EAAGwD,EAAIvD,EAAGwD,OAMZxB,EAAKyB,KAAK,SAAUzB,GAClC,MAAqB,SAAdA,EAAK5B,MAAmB4B,EAAK9B,QAAUhC,EAAKgC,WAIjD,EAAG,GAAI,IAAK,EAAG,EAAG,IAAKyC,QAAQ,SAAUe,GACzC,GAAIC,GAAQD,EAAM,GACdE,EAAWF,EAAM,GACjBG,EAAMH,EAAM,GACZ7C,EAAOV,EAAK4B,MAAM/B,GAAG2D,EAGzB,IAAK9C,GAAuB,UAAdA,EAAKT,OAGf4B,EAAKyB,KAAK,SAAUK,GACtB,MAAOA,GAAGvB,KAAKxC,IAAM4D,GAASG,EAAGvB,KAAKvC,IAAMA,IAD9C,CAKA,IAAK,GAAIuD,GAAKxD,EAAI8D,EAAKN,IAAOI,EAAOJ,GAAMM,EAAK,CAC9C,GAAI1D,EAAK4B,MAAM/B,GAAGuD,GAAK,MACvB,IAAIQ,IAAO,CAUX,IATA5D,EAAK4B,MAAMY,QAAQ,SAAUmB,GAC3BA,EAAGnB,QAAQ,SAAUqB,GACfA,GAAoB,SAAbA,EAAI5D,MAAmB4D,EAAI9D,QAAUhC,EAAKgC,OACnD8D,EAAItC,gBAAgBiB,QAAQ,SAAUsB,GAChCA,GAAUA,EAAOjE,IAAMA,GAAKiE,EAAOlE,IAAMwD,IAAIQ,GAAO,UAK3DA,EAAM,OAGb,GAAIG,IACFnE,EAAG6D,EACH5D,EAAGA,EACHwC,WACEC,MAAOvE,EAAKiC,KAAK4B,MAAM/B,GAAG2D,GAC1BpB,MACExC,EAAG4D,EAAO3D,EAAGA,GAEfsC,IACEtC,EAAGA,EAAGD,EAAGA,EAAI8D,IAKnB/B,GAAMO,KAAK6B,KAWf,OANIvC,GACWxB,EAAKuC,kBAAkBZ,EAAO5D,GAE9B4D,GAMjBhC,EAAMuB,KAAO,SAAUtB,EAAGC,EAAGE,EAAOC,GAClC,MAAO,IAAIiB,GAAKrB,EAAGC,EAAGE,EAAOC,IFoF/BrC,EEjFSgC,QFkFThC,EElFgB2C,OFmFhB3C,EEnFsB8C,OFoFtB9C,EEpF4BgD,SFqF5BhD,EErFoCkD,SFsFpClD,EEtF4CoD,QFuF5CpD,EEvFmDsD,QF2F7C,SAAUrD,EAAQD,EAASO,GAEjC,YAGAY,QAAOC,eAAepB,EAAS,cAC7BwD,OAAO,GG/bT,IAAM6C,GAAU,SAAUhE,GACxB,GAAI4B,GAAQ5B,EAAK4B,MAEbqC,EAAW,KACXC,GAAa,IA0BjB,OAzBAlE,GAAKmE,WAAW3B,QAAQ,SAAUmB,GAChC,GAAIvB,GAAOuB,EAAGvB,KACVD,EAAKwB,EAAGxB,GACRG,EAAQV,EAAMQ,EAAKvC,GAAGuC,EAAKxC,GAC3ByC,EAAYT,EAAMO,EAAGtC,GAAGsC,EAAGvC,IAC7B0C,MAAOV,EAAMO,EAAGtC,GAAGsC,EAAGvC,GACtBwC,MAAQxC,EAAGuC,EAAGvC,EAAGC,EAAGsC,EAAGtC,GACvBsC,GAAI,MACF,IAEAA,GAAGE,YAAWA,EAAYF,EAAGE,WAC7BA,GAAWrC,EAAKoE,gBAAgB/B,EAAUC,MAAOD,EAAUD,KAAMC,EAAUF,IAE/EnC,EAAKoE,gBAAgB9B,EAAOF,GAAQxC,EAAGuC,EAAGvC,EAAGC,EAAGsC,EAAGtC,GACnD,IAAIwE,IAAcC,EAAc1C,EAC5ByC,GAAaH,GAAyC,MAA5BtC,EAAMO,EAAGtC,GAAGsC,EAAGvC,GAAGG,QAC9CmE,EAAYG,EACZJ,GAAa7B,KAAMA,EAAMD,GAAIA,IAI/BnC,EAAKoE,gBAAgB9B,GAAS1C,EAAGuC,EAAGvC,EAAGC,EAAGsC,EAAGtC,GAAKuC,GAC9CC,GAAWrC,EAAKoE,gBAAgB/B,EAAUC,MAAOD,EAAUF,GAAIE,EAAUD,QAGxE6B,GAGLK,EAAgB,SAAU1C,GAE5B,IAAK,GADD2C,GAAkB,EACblG,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,GAAImG,GAAI,EAAGA,EAAI,EAAGA,IAErBD,GAAoCE,EAAc7C,EAAMvD,GAAGmG,GAI/D,OAAOD,IAGLE,EAAgB,SAAUnC,GAC5B,GAAc,OAAVA,EACF,MAAO,EAIT,IAiBIoC,GAjBmB,SAAUpC,GAC/B,MAAmB,SAAfA,EAAMrC,KACD,GACiB,SAAfqC,EAAMrC,KACR,GACiB,WAAfqC,EAAMrC,KACR,GACiB,WAAfqC,EAAMrC,KACR,GACiB,UAAfqC,EAAMrC,KACR,GACiB,SAAfqC,EAAMrC,KACR,QADF,IAM4BqC,EAAOA,EAAMvC,MAClD,OAAuB,MAAhBuC,EAAMvC,MAAgB2E,GAAiBA,EHychD/G,GAAQgH,QGrcOX,GH4cT,SAAUpG,EAAQD,EAASO,GAEjC,YAsBA,SAAS0G,GAAuBC,GAAO,MAAOA,IAAOA,EAAIzF,WAAayF,GAAQF,QAASE,GAnBvF/F,OAAOC,eAAepB,EAAS,cAC7BwD,OAAO,IAETxD,EAAQmH,SAAWnH,EAAQoH,GAAKpH,EAAQgC,MAAQhC,EAAQqH,SAAOC,EIhiB/D,IAAAC,GAAAhH,EAAA,GJoiBIiH,EAASP,EAAuBM,GIniBpCE,EAAAlH,EAAA,GAAYyB,EJ6iBZ,SAAiCkF,GAAO,GAAIA,GAAOA,EAAIzF,WAAc,MAAOyF,EAAc,IAAIQ,KAAa,IAAW,MAAPR,EAAe,IAAK,GAAIS,KAAOT,GAAW/F,OAAOS,UAAUC,eAAejB,KAAKsG,EAAKS,KAAMD,EAAOC,GAAOT,EAAIS,GAAgC,OAAtBD,GAAOV,QAAUE,EAAYQ,GAN9ND,GItiBpCG,EAAArH,EAAA,GJ0iBIsH,EAAOZ,EAAuBW,EAUlC5H,GI9iBEqH,KJ8iBaG,EAAOR,QACtBhH,EI9iBEgC,QJ+iBFhC,EI9iBEoH,GJ8iBWS,EAAKb,QAClBhH,EI9iBEmH,SAPe,gCJyjBX,SAAUlH,EAAQD,EAASO,GAEjC,YK7jBA,SAAS8G,GAAMS,GAEbzH,KAAK4D,QAEL,KAAK,GAAIvD,GAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IAAK,GADDqH,MACKlB,EAAI,EAAGA,EAAI,EAAGA,IACrBkB,EAAQxD,KAAK,KAEflE,MAAK4D,MAAMM,KAAKwD,GAIlB1H,KAAK6D,QAEL7D,KAAK2H,OAEL3H,KAAK4H,YAEL5H,KAAK6H,aL6iBP/G,OAAOC,eAAepB,EAAS,cAC7BwD,OAAO,GKpkBT,IAAAiE,GAAAlH,EAAA,GACAqH,EAAArH,EAAA,GL0kBIsH,EAEJ,SAAgCX,GAAO,MAAOA,IAAOA,EAAIzF,WAAayF,GAAQF,QAASE,IAFrDU,EKljBlCP,GAAKzF,UAAU+C,MAAQ,SAAUrC,EAAML,EAAGC,EAAGE,GAC3C,GAAIuC,GAAQ8C,EAAAzF,MAAMM,GAAML,EAAGC,EAAGE,EAAO/B,KACrCA,MAAK4D,MAAM/B,GAAGD,GAAK0C,EAEnBtE,KAAK2H,IAAM3H,KAAK8H,YAChB9H,KAAK4H,SAAW5H,KAAK+H,cAGvBf,EAAKzF,UAAUyG,aAAe,SAC5BC,EAAU9D,EAAI+D,EAAmBC,EAAmBC,EAAe5E,GAEnE,GAAI5B,GAAIuC,EAAGvC,EACPC,EAAIsC,EAAGtC,CAEX,IAAIoG,EAAU,CACZ,GAAI7D,IAASxC,EAAGqG,EAASrG,EAAGC,EAAGoG,EAASpG,EAExC,IAAI7B,KAAK4D,MAAM/B,GAAGD,KAAOqG,EAAU,CAIjC,IAAK,GAHDI,GAAaJ,EAAS1E,eAAeC,GACrC8E,EAAY,KAEPjI,EAAI,EAAGA,EAAIgI,EAAWvE,OAAQzD,IAAK,CAC1C,GAAIkI,GAAKF,EAAWhI,EACpB,IAAIkI,EAAG3G,IAAMA,GAAK2G,EAAG1G,IAAMA,EAAG,CAC5ByG,EAAYC,CACZ,QAIJ,IAAKD,EAAW,OAAO,CACvB,IACIE,GAAMC,EAAO/F,EADb2B,EAAYiE,EAAUjE,SAEtBA,KACFmE,EAAOnE,EAAUD,KACjBqE,EAAQpE,EAAUF,GACJ,OAAVsE,EACFzI,KAAK4D,MAAM4E,EAAK3G,GAAG2G,EAAK5G,GAAK,MAE7Bc,EAAO1C,KAAK4D,MAAM4E,EAAK3G,GAAG2G,EAAK5G,GAC/B5B,KAAK4D,MAAM6E,EAAM5G,GAAG4G,EAAM7G,GAAKc,EAC/BA,EAAKd,EAAI6G,EAAM7G,EACfc,EAAKb,EAAI4G,EAAM5G,EACf7B,KAAK4D,MAAM4E,EAAK3G,GAAG2G,EAAK5G,GAAK,MAIjC,IAAI0C,GAAQtE,KAAK4D,MAAM/B,GAAGD,GAAK5B,KAAK4D,MAAM/B,GAAGD,GAAK,IAClDyC,GAAaA,EAAYiE,EAAUjE,UAAY,KAC/CrE,KAAK6D,KAAKK,MACRE,KAAMA,EACND,GAAIA,EACJpC,MAAOkG,EAASlG,MAChBE,KAAMgG,EAAShG,KACfqC,MAAOA,EACPD,UAAWA,IAGbrE,KAAK4D,MAAM/B,GAAGD,GAAKqG,EACnBjI,KAAK4D,MAAMqE,EAASpG,GAAGoG,EAASrG,GAAK,KACrC5B,KAAK4D,MAAM/B,GAAGD,GAAGA,EAAIA,EACrB5B,KAAK4D,MAAM/B,GAAGD,GAAGC,EAAIA,EAErB7B,KAAK2H,IAAM3H,KAAK8H,YAChB9H,KAAK4H,SAAW5H,KAAK+H,aAGrB/H,KAAK6H,UAAU3D,KAAKlE,KAAK4H,WACH,SAAlBK,EAAShG,MAAmBqC,KAAOtE,KAAK6H,cACxC7H,KAAK0I,kBAAkBP,EAAkB,KAGzCnI,KAAK2I,iBAAmB,IAAIR,EAAkB,KAG5B,SAAlBF,EAAShG,OACa,MAAnBgG,EAASlG,OAAuB,IAANF,GAAgC,MAAnBoG,EAASlG,OAAuB,IAANF,IAChEqG,IACDE,GAAoC,MAAnBH,EAASlG,MAEvBmG,EAAkBD,EAAUrG,EAAGC,EAAGoG,EAASlG,OAD3C/B,KAAK4I,YAAYX,EAAUrG,EAAGC,EAAGoG,EAASlG,MAAO,SAM3D,IAAI8G,GAAoC,MAAnBZ,EAASlG,MAAgB,IAAM,IAChD+G,EAAiB9I,KAAK+I,UAAUF,EAIpC,IAHIC,GAAgBX,EAAkBW,GAGlCV,EAAe,CACjB,GAAInC,IAAW,EAAAuB,EAAAb,SAAQ3G,KACvBA,MAAKgI,aACHhI,KAAK4D,MAAMqC,EAAS7B,KAAKvC,GAAGoE,EAAS7B,KAAKxC,GAC1CqE,EAAS9B,GACT+D,EACAC,GACA,EACA3E,IAMN,MADAyE,GAAW,MACJ,IAIXjB,EAAKzF,UAAUqH,YAAc,SAAUpG,EAAMZ,EAAGC,EAAGE,EAAOE,GACxDjC,KAAKsE,MAAMrC,EAAML,EAAGC,EAAGE,IAGzBiF,EAAKzF,UAAUgD,kBAAoB,SAAUZ,EAAOW,GAClD,GAAI+D,MACAtI,EAAOC,KACP4D,EAAQ5D,KAAK4D,KA0BjB,OAxBAD,GAAMa,QAAQ,SAAUwE,EAAM3I,GAC5B,GAAIwB,GAAImH,EAAKnH,EACTD,EAAIoH,EAAKpH,EACTwC,GAASxC,EAAG0C,EAAM1C,EAAGC,EAAGyC,EAAMzC,GAC9BwC,EAAYT,EAAM/B,GAAGD,IACvB0C,MAAOV,EAAM/B,GAAGD,GAChBwC,MAAQxC,EAAGA,EAAGC,EAAGA,GACjBsC,GAAI,MACF,IAEA6E,GAAK3E,YAAWA,EAAY2E,EAAK3E,WACjCA,GAAWtE,EAAKqG,gBAAgB/B,EAAUC,MAAOD,EAAUD,KAAMC,EAAUF,IAE/EpE,EAAKqG,gBAAgB9B,EAAOF,GAAQxC,EAAGA,EAAGC,EAAGA,GAC7C,IAAIoH,GAAUlJ,EAAKkJ,QAAQ3E,EAAMvC,MAGjChC,GAAKqG,gBAAgB9B,GAAS1C,EAAGA,EAAGC,EAAGA,GAAKuC,GAGxCC,GAAWtE,EAAKqG,gBAAgB/B,EAAUC,MAAOD,EAAUF,GAAIE,EAAUD,MAExE6E,GAASZ,EAAWnE,KAAK8E,KAEzBX,GAGTrB,EAAKzF,UAAUwH,UAAY,SAAUhH,GAEnC,IAAK,GAAI1B,GAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,GAAImG,GAAI,EAAGA,EAAI,EAAGA,IACrB,GACExG,KAAK4D,MAAMvD,GAAGmG,IACdxG,KAAK4D,MAAMvD,GAAGmG,GAAGzE,QAAUA,GAC3B/B,KAAK4D,MAAMvD,GAAGmG,GAAGjD,eAAc,GAAMO,OACrC,OAAO,CAGb,OAAI9D,MAAKiJ,QAAQlH,GAAeA,EACzB,KAGTiF,EAAKzF,UAAU6E,gBAAkB,SAAU9B,EAAOF,EAAMD,GACtD,GAAIP,GAAQ5D,KAAK4D,KACbO,KACFP,EAAMO,EAAGtC,GAAGsC,EAAGvC,GAAK0C,EACpBA,EAAM1C,EAAIuC,EAAGvC,EACb0C,EAAMzC,EAAIsC,EAAGtC,GAEXuC,IAAMR,EAAMQ,EAAKvC,GAAGuC,EAAKxC,GAAK,OAGpCoF,EAAKzF,UAAU0H,QAAU,SAAUlH,GACjC,GACImB,GADAgG,GAAS,CAoBb,OAjBAlJ,MAAK4D,MAAMY,QAAQ,SAAU2E,GAC3BA,EAAI3E,QAAQ,SAAU4E,GAChBA,GAAOA,EAAIrH,QAAUA,GAAsB,SAAbqH,EAAInH,OACpCiB,EAAOkG,OAKbpJ,KAAK4D,MAAMY,QAAQ,SAAU2E,GAC3BA,EAAI3E,QAAQ,SAAU4E,GAChBA,GAAOA,EAAIrH,QAAUA,GACvBqH,EAAI7F,gBAAgBiB,QAAQ,SAAU6E,GAChCA,EAAIzH,IAAMsB,EAAKtB,GAAKyH,EAAIxH,IAAMqB,EAAKrB,IAAGqH,GAAS,SAKpDA,GAGTlC,EAAKzF,UAAUmH,eAAiB,WAI9B,IAAK,GAHDb,GAAY7H,KAAK6H,UACjB/D,EAAS+D,EAAU/D,OAEdzD,EAAI,EAAGA,EAAIyD,EAAQzD,IAAK,CAG/B,IAAK,GADDiJ,GAAQ,EACH9C,EAAInG,EAAI,EAAGmG,EAAI1C,EAAQ0C,IAC1BqB,EAAUxH,KAAOwH,EAAUrB,KAAI8C,GAAS,EAE9C,IAAIA,GAAS,EAAG,OAAO,EAGzB,OAAO,GAGTtC,EAAKzF,UAAUgI,UAAY,SAAU3H,EAAGC,GAEtC,MADa,WACCO,OAAOR,IAAM,EAAIC,IAIjCmF,EAAKzF,UAAUwG,WAAa,WAM1B,IAAK,GALDnE,GAAQ5D,KAAK4D,MAGbgE,EAAW,GACX4B,EAAgB,EACXnJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAK,GAAImG,GAAI,EAAGA,EAAI,EAAGA,IACjB5C,EAAMvD,GAAGmG,IACPgD,IAAe5B,GAAY4B,GAC/BA,EAAgB,EAChB5B,GAAYhE,EAAMvD,GAAGmG,GAAGrE,SAExBqH,GAGAA,KAAe5B,GAAY4B,GAC/BA,EAAgB,EAChB5B,GAAYvH,EAAI,EAAI,IAAM,GAG5B,MAAOuH,IAGTZ,EAAKzF,UAAUoH,cAAgB,WAC7B,GAAI9E,GAAO7D,KAAK6D,KACZC,EAASD,EAAKC,OACdwF,EAAQ,CACZ,IAAoB,IAAhBzF,EAAKC,OAAc,MAAOwF,EAG9B,KADA,GAAI3D,GAAK9B,EAAMC,EAAS,EAAKwF,GACtBA,GAASxF,EAAS,GAAiB,SAAZ6B,EAAG1D,OAAoB0D,EAAGrB,OACtDgF,IACA3D,EAAK9B,EAAMC,EAAS,EAAKwF,EAG3B,OAAOA,IAGTtC,EAAKzF,UAAUkI,aAAe,WAC5B,GAAI5F,GAAO7D,KAAK6D,IAKhB,OAHEA,GAAKC,QAC2B,MAAhCD,EAAKA,EAAKC,OAAS,GAAG/B,MAAgB,IAAM,KAKhDiF,EAAKzF,UAAUmI,eAAiB,WAC9B,GAIIC,GACAC,EALAhG,EAAQ5D,KAAK4D,MACbC,EAAO7D,KAAK6D,KACZgG,EAAmB,EA+BvB,OA3BAhG,GAAKW,QAAQ,SAAUX,GACrB8F,EAA+B,SAAd9F,EAAK5B,MAAkC,MAAf4B,EAAK9B,MAC9C6H,EAA+B,SAAd/F,EAAK5B,MAAkC,MAAf4B,EAAK9B,UAG9C,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAIyC,QAAQ,SAAUe,GACjD,GAAIC,GAAQD,EAAM,GACduE,EAAQvE,EAAM,GACd7C,EAAOkB,EAAMkG,GAAOtE,EAExB,KAAc,IAAVsE,IAAeH,KACL,IAAVG,IAAeF,IAGdlH,GAAuB,UAAdA,EAAKT,OAGf4B,EAAKyB,KAAK,SAAUK,GACtB,MAAgB,SAAZA,EAAG1D,OACA0D,EAAGvB,KAAKxC,IAAM4D,GAASG,EAAGvB,KAAKvC,IAAMiI,KAF9C,CAKA,GAAIC,GAAyB,IAAVvE,EAAc,IAAM,GACvCqE,IAA8B,IAAVC,EAAcC,EAAa1H,cAAgB0H,KAG5DF,IAAkBA,EAAmB,KACnCA,GAGT7C,EAAKzF,UAAUyI,gBAAkB,WAC/B,GAAInG,GAAO7D,KAAK6D,KACZmG,EAAkB,EAEtB,IAAInG,EAAKC,OAAQ,CACf,GAAI6B,GAAK9B,EAAKA,EAAKC,OAAS,EACX,OAAb6B,EAAG5D,OAA6B,IAAZ4D,EAAGxB,GAAGtC,IAC5BmI,EAAkBhK,KAAKuJ,UAAU5D,EAAGxB,GAAGvC,EAAG+D,EAAGxB,GAAGtC,EAAI,IAGrC,MAAb8D,EAAG5D,OAA6B,IAAZ4D,EAAGxB,GAAGtC,IAC5BmI,EAAkBhK,KAAKuJ,UAAU5D,EAAGxB,GAAGvC,EAAG+D,EAAGxB,GAAGtC,EAAI,IAKxD,MADKmI,KAAiBA,EAAkB,KACjCA,GAGThD,EAAKzF,UAAU0I,cAAgB,WAC7B,GAAIX,GAAQ,CAKZ,OAJAtJ,MAAK6D,KAAKW,QAAQ,SAAUmB,GACT,MAAbA,EAAG5D,QAAeuH,GAAS,KAG1BA,GAGTtC,EAAKzF,UAAUuG,UAAY,WACzB,GAAIH,GAAM,EA0BV,OAvBAA,IAAO3H,KAAK+H,aAGZJ,GAAO,IAAM3H,KAAKyJ,eAGlB9B,GAAO,IAAM3H,KAAK0J,iBAGlB/B,GAAO,IAAM3H,KAAKgK,kBAGlBrC,GAAO,IAAM3H,KAAK2I,gBAGlBhB,GAAO,IAAM3H,KAAKiK,iBAYpBjD,EAAKzF,UAAU2I,eAAiB,WAI9B,IAAK,GAHDC,GAAc,GAAInD,GAGb3G,EAAI,EAAGA,EAAI,EAAGA,IACrB8J,EAAY7F,MAAM,OAAQjE,EAAG,EAAG,KAChC8J,EAAY7F,MAAM,OAAQjE,EAAG,EAAG,IAuBlC,OAnBA8J,GAAY7F,MAAM,OAAQ,EAAG,EAAG,KAChC6F,EAAY7F,MAAM,SAAU,EAAG,EAAG,KAClC6F,EAAY7F,MAAM,SAAU,EAAG,EAAG,KAClC6F,EAAY7F,MAAM,QAAS,EAAG,EAAG,KACjC6F,EAAY7F,MAAM,OAAQ,EAAG,EAAG,KAChC6F,EAAY7F,MAAM,SAAU,EAAG,EAAG,KAClC6F,EAAY7F,MAAM,SAAU,EAAG,EAAG,KAClC6F,EAAY7F,MAAM,OAAQ,EAAG,EAAG,KAGhC6F,EAAY7F,MAAM,OAAQ,EAAG,EAAG,KAChC6F,EAAY7F,MAAM,SAAU,EAAG,EAAG,KAClC6F,EAAY7F,MAAM,SAAU,EAAG,EAAG,KAClC6F,EAAY7F,MAAM,QAAS,EAAG,EAAG,KACjC6F,EAAY7F,MAAM,OAAQ,EAAG,EAAG,KAChC6F,EAAY7F,MAAM,SAAU,EAAG,EAAG,KAClC6F,EAAY7F,MAAM,SAAU,EAAG,EAAG,KAClC6F,EAAY7F,MAAM,OAAQ,EAAG,EAAG,KAEzB6F,GAGTnD,EAAKzF,UAAU4E,SAAW,WAKxB,IAAK,GAJDvC,GAAQ5D,KAAK4D,MACbuC,KACAsD,EAAezJ,KAAKyJ,eAAepH,cAE9BhC,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,GAAImG,GAAI,EAAGA,EAAI,EAAGA,IACrB,GAAI5C,EAAMvD,GAAGmG,IAAM5C,EAAMvD,GAAGmG,GAAGzE,QAAU0H,EAAc,CACrD,GAAIpB,GAAazE,EAAMvD,GAAGmG,GAAGjD,eAC7B8E,GAAW7D,QAAQ,SAAUmB,GAC3BQ,EAASjC,MACPnC,MAAO6B,EAAMvD,GAAGmG,GAAGzE,MACnBqC,MAAOxC,EAAG4E,EAAG3E,EAAGxB,GAChB8D,GAAIwB,EACJxD,QAASyB,EAAMvD,GAAGmG,GAAGrE,YAO/B,MAAOgE,IL8jBTxG,EAAQgH,QK3jBOK","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"rsg-chess\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rsg-chess\"] = factory();\n\telse\n\t\troot[\"rsg-chess\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"rsg-chess\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rsg-chess\"] = factory();\n\telse\n\t\troot[\"rsg-chess\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//\n// RSG Chess\n// Licensed under Apache 2.0 LICENSE\n\nvar PIECE_CHARS = exports.PIECE_CHARS = {\n  pawn: { W: '♙', B: '♟' },\n  rook: { W: '♖', B: '♜' },\n  knight: { W: '♘', B: '♞' },\n  bishop: { W: '♗', B: '♝' },\n  queen: { W: '♕', B: '♛' },\n  king: { W: '♔', B: '♚' }\n};\n\nfunction Piece(x, y, charBase, color, game, type) {\n  if (charBase) this.char = charBase[color];\n  this.color = color;\n  this.x = x;\n  this.y = y;\n  this.game = game;\n  this.type = type;\n  if (type) {\n    var FENname = type === 'knight' ? 'n' : type.charAt(0);\n    if (this.color === 'W') FENname = FENname.toUpperCase();\n    this.FENname = FENname;\n  }\n}\n\nPiece.empty = function () {\n  return new Piece();\n};\n\nPiece.prototype.getValidMoves = function () {\n  return [{ x: 0, y: 0 }, { x: 7, y: 7 }];\n};\n\nfunction Pawn(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.pawn, color, game, 'pawn');\n}\n\nPawn.prototype = Piece.empty();\nPawn.prototype.getValidMoves = function (simulate) {\n  var game = this.game;\n  var moves = [];\n  /* eslint-disable */\n  var y = this.y,\n      x = this.x;\n  var board = game.board,\n      turn = game.turn,\n      length = turn.length;\n  var last, turnTo, turnFrom, figX, passantLast, passantFig;\n  var colorY = this.color === 'W' ? y - 1 : y + 1;\n  var colorY2 = this.color === 'W' ? y - 2 : y + 2;\n  var passantY2 = this.color === 'W' ? 3 : 4;\n  var figXArray = [x - 1, x + 1];\n  /* eslint-enable */\n\n  if (colorY < 8 && colorY >= 0 && !board[colorY][x]) {\n    moves.push({ x: x, y: colorY });\n    if ((y === 1 || y === 6) && colorY2 < 8 && colorY2 >= 0 && !game.board[colorY2][x]) {\n      moves.push({ x: x, y: colorY2 });\n    }\n  }\n\n  for (var i = 0; i < 2; i++) {\n    figX = figXArray[i];\n    if (colorY < 8 && colorY >= 0 && board[colorY][figX] && board[colorY][figX].color !== this.color) moves.push({ x: figX, y: colorY });\n  }\n\n  for (var _i = 0; _i < 2; _i++) {\n    figX = figXArray[_i];\n    last = turn[length - 1];\n\n    if (last && last.to.x === figX && last.to.y === y && last.color !== this.color && (last.from.y === 1 || last.from.y === 6) && (y === 3 || y === 4)) {\n      moves.push({\n        x: figX,\n        y: colorY,\n        movePiece: {\n          piece: game.board[y][figX],\n          from: {\n            x: figX,\n            y: y\n          },\n          to: null\n        }\n      });\n    }\n  }\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.pawn = function (x, y, color, game) {\n  return new Pawn(x, y, color, game);\n};\n\n// //\n\nfunction Rook(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.rook, color, game, 'rook');\n}\n\nRook.prototype = Piece.empty();\nRook.prototype.getValidMoves = function (simulate) {\n  var game = this.game;\n  var moves = [];\n\n  [[-1, 0], [1, 0], [0, 1], [0, -1]].forEach(function (coef) {\n    var index, x, y, piece;\n    for (index = 1;; index++) {\n      x = this.x + coef[0] * index;\n      y = this.y + coef[1] * index;\n      if (y < 0 || y > 7 || x < 0 || x > 7) break;\n\n      piece = game.board[y][x];\n      if (piece && piece.color === this.color) break;\n\n      moves.push({ x: x, y: y });\n      if (piece) break;\n    }\n  }, this);\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.rook = function (x, y, color, game) {\n  return new Rook(x, y, color, game);\n};\n\n// //\n\nfunction Knight(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.knight, color, game, 'knight');\n}\n\nKnight.prototype = Piece.empty();\nKnight.prototype.getValidMoves = function (simulate) {\n  var game = this.game;\n  var moves = [];\n\n  var coordinates = [[2, 1], [-2, 1], [1, 2], [-1, 2], [2, -1], [-2, -1], [1, -2], [-1, -2]];\n\n  var one, two;\n  for (var i = 0; i < coordinates.length; i++) {\n    var help = false;\n    var boardPiece;\n    one = coordinates[i][0];\n    two = coordinates[i][1];\n\n    if (this.x + one < 8 && this.x + one >= 0 && this.y + two < 8 && this.y + two >= 0) {\n      boardPiece = game.board[this.y + two][this.x + one];\n      help = boardPiece ? boardPiece.color !== this.color : true;\n    }\n\n    if (help) {\n      moves.push({ x: this.x + one, y: this.y + two });\n    }\n  }\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.knight = function (x, y, color, game) {\n  return new Knight(x, y, color, game);\n};\n\n// //\n\nfunction Bishop(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.bishop, color, game, 'bishop');\n}\n\nBishop.prototype = Piece.empty();\nBishop.prototype.getValidMoves = function (simulate) {\n  var game = this.game;\n  var moves = [];\n\n  [[-1, -1], [1, 1], [-1, 1], [1, -1]].forEach(function (coef) {\n    var index, x, y, piece;\n    for (index = 1;; index++) {\n      x = this.x + coef[0] * index;\n      y = this.y + coef[1] * index;\n      if (y < 0 || y > 7 || x < 0 || x > 7) break;\n\n      piece = game.board[y][x];\n      if (piece && piece.color === this.color) break;\n\n      moves.push({ x: x, y: y });\n      if (piece) break;\n    }\n  }, this);\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.bishop = function (x, y, color, game) {\n  return new Bishop(x, y, color, game);\n};\n\n// //\n\nfunction Queen(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.queen, color, game, 'queen');\n}\n\nQueen.prototype = Piece.empty();\nQueen.prototype.getValidMoves = function (simulate) {\n  var game = this.game;\n  var rookMoves = Rook.prototype.getValidMoves.call(this);\n  var bishopMoves = Bishop.prototype.getValidMoves.call(this);\n  var moves = rookMoves.concat(bishopMoves);\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, this);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.queen = function (x, y, color, game) {\n  return new Queen(x, y, color, game);\n};\n\n// //\n\nfunction King(x, y, color, game) {\n  Piece.call(this, x, y, PIECE_CHARS.king, color, game, 'king');\n}\n\nKing.prototype = Piece.empty();\nKing.prototype.getValidMoves = function (simulate) {\n  var moves = [];\n  var coordinates = [[0, 1], [0, -1], [1, 1], [-1, -1], [1, -1], [-1, 1], [-1, 0], [1, 0]];\n  var x = this.x;\n  var y = this.y;\n  var game = this.game;\n  var turn = game.turn;\n  var self = this;\n\n  coordinates.forEach(function (coord) {\n    var piece;\n    var xx = x + coord[0];\n    var yy = y + coord[1];\n\n    if (xx < 8 && xx >= 0 && yy < 8 && yy >= 0) {\n      piece = game.board[yy][xx];\n      if (!piece || piece.color !== self.color) {\n        moves.push({ x: xx, y: yy });\n      }\n    }\n  });\n\n  // Check king hasn't moved\n  var kingMoved = turn.some(function (turn) {\n    return turn.type === 'king' && turn.color === self.color;\n  });\n\n  if (!kingMoved) {\n    [[0, 2, -1], [7, 6, +1]].forEach(function (props) {\n      var rookX = props[0];\n      var newKingX = props[1];\n      var dir = props[2];\n      var rook = game.board[y][rookX];\n\n      // Check rook on position\n      if (!rook || !rook.type === 'rook') return;\n\n      // Check rook hasn't moved\n      if (turn.some(function (ev) {\n        return ev.from.x === rookX && ev.from.y === y;\n      })) return;\n\n      // Check squares empty and safe\n      for (var xx = x + dir; xx !== rookX; xx += dir) {\n        if (game.board[y][xx]) return;\n        var safe = true;\n        game.board.forEach(function (ev) {\n          ev.forEach(function (evv) {\n            if (evv && evv.type !== 'king' && evv.color !== self.color) {\n              evv.getValidMoves().forEach(function (evMove) {\n                if (evMove && evMove.y === y && evMove.x === xx) safe = false;\n              });\n            }\n          });\n        });\n        if (!safe) return;\n      }\n\n      var rochade = {\n        x: newKingX,\n        y: y,\n        movePiece: {\n          piece: self.game.board[y][rookX],\n          from: {\n            x: rookX, y: y\n          },\n          to: {\n            y: y, x: x + dir\n          }\n        }\n      };\n\n      moves.push(rochade);\n    });\n  }\n\n  var validMoves = [];\n  if (simulate) {\n    validMoves = game.simulateAndFilter(moves, self);\n  } else {\n    validMoves = moves;\n  }\n\n  return validMoves;\n};\n\nPiece.king = function (x, y, color, game) {\n  return new King(x, y, color, game);\n};\n\nexports.Piece = Piece;\nexports.Pawn = Pawn;\nexports.Rook = Rook;\nexports.Knight = Knight;\nexports.Bishop = Bishop;\nexports.Queen = Queen;\nexports.King = King;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//\n// RSG Chess\n// Licensed under Apache 2.0 LICENSE\n\nvar ChessAI = function ChessAI(game) {\n  var board = game.board;\n  // best values /bestMove & bestValue/\n  var bestMove = null;\n  var bestValue = -9999;\n  game.allMoves().forEach(function (ev) {\n    var from = ev.from;\n    var to = ev.to;\n    var piece = board[from.y][from.x];\n    var movePiece = board[to.y][to.x] ? {\n      piece: board[to.y][to.x],\n      from: { x: to.x, y: to.y },\n      to: null\n    } : null;\n    // check for en-passant, and already captured pieces /movePiece/\n    if (to.movePiece) movePiece = to.movePiece;\n    if (movePiece) game.simpleMovePiece(movePiece.piece, movePiece.from, movePiece.to);\n    // simulate the current move from .getValidMoves() array /to/\n    game.simpleMovePiece(piece, from, { x: to.x, y: to.y });\n    var boardValue = -evaluateBoard(board);\n    if (boardValue > bestValue && board[to.y][to.x].color === 'B') {\n      bestValue = boardValue;\n      bestMove = { from: from, to: to };\n    }\n\n    // return the current move /ev/\n    game.simpleMovePiece(piece, { x: to.x, y: to.y }, from);\n    if (movePiece) game.simpleMovePiece(movePiece.piece, movePiece.to, movePiece.from);\n  });\n  // return the best move\n  return bestMove;\n};\n\nvar evaluateBoard = function evaluateBoard(board) {\n  var totalEvaluation = 0;\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      // calculate the current evaluation\n      totalEvaluation = totalEvaluation + getPieceValue(board[i][j]);\n    }\n  }\n  // return the total evaluation\n  return totalEvaluation;\n};\n\nvar getPieceValue = function getPieceValue(piece) {\n  if (piece === null) {\n    return 0;\n  }\n\n  // get value for every piece on the board\n  var getAbsoluteValue = function getAbsoluteValue(piece) {\n    if (piece.type === 'pawn') {\n      return 10;\n    } else if (piece.type === 'rook') {\n      return 50;\n    } else if (piece.type === 'knight') {\n      return 30;\n    } else if (piece.type === 'bishop') {\n      return 30;\n    } else if (piece.type === 'queen') {\n      return 90;\n    } else if (piece.type === 'king') {\n      return 900;\n    }\n  };\n\n  // calculate the absolute value and return it\n  var absoluteValue = getAbsoluteValue(piece, piece.color === 'W');\n  return piece.color === 'W' ? absoluteValue : -absoluteValue;\n};\n\n// export the algorithm\nexports.default = ChessAI;\n\n// Written by Radi Cho\n// RSG Chess - by RSG Group\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Graphics = exports.AI = exports.Piece = exports.Game = undefined;\n\nvar _game = __webpack_require__(3);\n\nvar _game2 = _interopRequireDefault(_game);\n\nvar _pieces = __webpack_require__(0);\n\nvar Piece = _interopRequireWildcard(_pieces);\n\nvar _AI = __webpack_require__(1);\n\nvar _AI2 = _interopRequireDefault(_AI);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Graphics = 'This feature is coming soon!';\n\n// And export...\n// Let's import...\nexports.Game = _game2.default;\nexports.Piece = Piece;\nexports.AI = _AI2.default;\nexports.Graphics = Graphics;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _pieces = __webpack_require__(0);\n\nvar _AI = __webpack_require__(1);\n\nvar _AI2 = _interopRequireDefault(_AI);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction Game(promoCallback) {\n  // the game board\n  this.board = [];\n  // fill the board\n  for (var i = 0; i < 8; i++) {\n    var arrayIn = [];\n    for (var j = 0; j < 8; j++) {\n      arrayIn.push(null);\n    }\n    this.board.push(arrayIn);\n  }\n\n  // the history of all turns\n  this.turn = [];\n  // the current FEN status\n  this.FEN = [];\n  // the current game configuration as FEN\n  this.FENboard = [];\n  // the history of all game configurations displayed using FEN\n  this.threefold = [];\n}\n\nGame.prototype.piece = function (type, x, y, color) {\n  var piece = _pieces.Piece[type](x, y, color, this);\n  this.board[y][x] = piece;\n\n  this.FEN = this.gameToFEN();\n  this.FENboard = this.boardToFEN();\n};\n\nGame.prototype.moveSelected = function (selected, to, promotionCallback, checkmateCallback, playAgainstAI, simulate) {\n  var x = to.x;\n  var y = to.y;\n\n  if (selected) {\n    var from = { x: selected.x, y: selected.y };\n\n    if (this.board[y][x] !== selected) {\n      var validMoves = selected.getValidMoves(!simulate);\n      var validMove = null;\n\n      for (var i = 0; i < validMoves.length; i++) {\n        var vm = validMoves[i];\n        if (vm.x === x && vm.y === y) {\n          validMove = vm;\n          break;\n        }\n      }\n\n      if (!validMove) return false;\n      var movePiece = validMove.movePiece;\n      var take, paste, rook;\n      if (movePiece) {\n        take = movePiece.from;\n        paste = movePiece.to;\n        if (paste === null) {\n          this.board[take.y][take.x] = null;\n        } else {\n          rook = this.board[take.y][take.x];\n          this.board[paste.y][paste.x] = rook;\n          rook.x = paste.x;\n          rook.y = paste.y;\n          this.board[take.y][take.x] = null;\n        }\n      }\n\n      var piece = this.board[y][x] ? this.board[y][x] : null;\n      movePiece = movePiece ? validMove.movePiece : null;\n      this.turn.push({\n        from: from,\n        to: to,\n        color: selected.color,\n        type: selected.type,\n        piece: piece,\n        movePiece: movePiece\n      });\n\n      this.board[y][x] = selected;\n      this.board[selected.y][selected.x] = null;\n      this.board[y][x].x = x;\n      this.board[y][x].y = y;\n\n      this.FEN = this.gameToFEN();\n      this.FENboard = this.boardToFEN();\n      // check for threefold repetition\n\n      this.threefold.push(this.FENboard);\n      if (selected.type === 'pawn' || piece) this.threefold = [];\n      if (this.threefoldCheck()) checkmateCallback('D');\n\n      // check for the fifty-move rule\n      if (this.halfmoveClock() >= 50) checkmateCallback('D');\n\n      // check for pawn promotion\n      if (selected.type === 'pawn') {\n        if (selected.color === 'W' && y === 0 || selected.color === 'B' && y === 7) {\n          if (promotionCallback) {\n            !playAgainstAI && selected.color === 'B' ? this.promotePawn(selected, x, y, selected.color, 'queen') : promotionCallback(selected, x, y, selected.color);\n          }\n        }\n      };\n\n      var checkmateColor = selected.color === 'W' ? 'B' : 'W';\n      var checkmateValue = this.checkmate(checkmateColor);\n      if (checkmateValue) checkmateCallback(checkmateValue);\n\n      // Play AI\n      if (playAgainstAI) {\n        var bestMove = (0, _AI2.default)(this);\n        this.moveSelected(this.board[bestMove.from.y][bestMove.from.x], bestMove.to, promotionCallback, checkmateCallback, false, simulate);\n      }\n      // end\n    }\n    selected = null;\n    return true;\n  }\n};\n\nGame.prototype.promotePawn = function (pawn, x, y, color, type) {\n  this.piece(type, x, y, color);\n};\n\nGame.prototype.simulateAndFilter = function (moves, piece) {\n  var validMoves = [];\n  var self = this;\n  var board = this.board;\n\n  moves.forEach(function (move, i) {\n    var y = move.y;\n    var x = move.x;\n    var from = { x: piece.x, y: piece.y };\n    var movePiece = board[y][x] ? {\n      piece: board[y][x],\n      from: { x: x, y: y },\n      to: null\n    } : null;\n\n    if (move.movePiece) movePiece = move.movePiece;\n    if (movePiece) self.simpleMovePiece(movePiece.piece, movePiece.from, movePiece.to);\n\n    self.simpleMovePiece(piece, from, { x: x, y: y });\n    var warning = self.warning(piece.color);\n\n    // Return king\n    self.simpleMovePiece(piece, { x: x, y: y }, from);\n\n    // return the movePiece with simpleMovePiece() method\n    if (movePiece) self.simpleMovePiece(movePiece.piece, movePiece.to, movePiece.from);\n\n    if (!warning) validMoves.push(move);\n  });\n  return validMoves;\n};\n\nGame.prototype.checkmate = function (color) {\n  // using let will allow us to make the code a bit simpler\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      if (this.board[i][j] && this.board[i][j].color === color && this.board[i][j].getValidMoves(true).length) return false;\n    }\n  }\n  if (this.warning(color)) return color;\n  return 'D';\n};\n\nGame.prototype.simpleMovePiece = function (piece, from, to) {\n  var board = this.board;\n  if (to) {\n    board[to.y][to.x] = piece;\n    piece.x = to.x;\n    piece.y = to.y;\n  }\n  if (from) board[from.y][from.x] = null;\n};\n\nGame.prototype.warning = function (color) {\n  var result = false;\n  var king;\n\n  this.board.forEach(function (yyy) {\n    yyy.forEach(function (xxx) {\n      if (xxx && xxx.color === color && xxx.type === 'king') {\n        king = xxx;\n      }\n    });\n  });\n\n  this.board.forEach(function (yyy) {\n    yyy.forEach(function (xxx) {\n      if (xxx && xxx.color !== color) {\n        xxx.getValidMoves().forEach(function (mmm) {\n          if (mmm.x === king.x && mmm.y === king.y) result = true;\n        });\n      }\n    });\n  });\n  return result;\n};\n\nGame.prototype.threefoldCheck = function () {\n  var threefold = this.threefold;\n  var length = threefold.length;\n\n  for (var i = 0; i < length; i++) {\n    // using let will allow us to make the code simpler\n    var count = 0;\n    for (var j = i + 1; j < length; j++) {\n      if (threefold[i] === threefold[j]) count += 1;\n    }\n    if (count >= 2) return true;\n  }\n\n  return false;\n};\n\nGame.prototype.pieceToAN = function (x, y) {\n  var xChars = 'abcdefgh';\n  return xChars.charAt(x) + (8 - y);\n};\n\n// Support FEN functions in the API\nGame.prototype.boardToFEN = function () {\n  var board = this.board;\n\n  // Convert the board configuration into FEN\n  var FENboard = '';\n  var missingPieces = 0;\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      if (board[i][j]) {\n        if (missingPieces) FENboard += missingPieces;\n        missingPieces = 0;\n        FENboard += board[i][j].FENname;\n      } else {\n        missingPieces++;\n      }\n    }\n    if (missingPieces) FENboard += missingPieces;\n    missingPieces = 0;\n    FENboard += i < 7 ? '/' : '';\n  }\n\n  return FENboard;\n};\n\nGame.prototype.halfmoveClock = function () {\n  var turn = this.turn;\n  var length = turn.length;\n  var count = 0;\n  if (turn.length === 0) return count;\n\n  var ev = turn[length - 1 - count];\n  while (count <= length - 1 && ev.type !== 'pawn' && !ev.piece) {\n    count++;\n    ev = turn[length - 1 - count];\n  }\n\n  return count;\n};\n\nGame.prototype.activeColour = function () {\n  var turn = this.turn;\n  var activeColor = turn.length && turn[turn.length - 1].color === 'W' ? 'b' : 'w';\n\n  return activeColor;\n};\n\nGame.prototype.castlingTarget = function () {\n  var board = this.board;\n  var turn = this.turn;\n  var possibleCastling = '';\n\n  var whiteKingMoved;\n  var blackKingMoved;\n  turn.forEach(function (turn) {\n    whiteKingMoved = turn.type === 'king' && turn.color === 'W';\n    blackKingMoved = turn.type === 'king' && turn.color === 'B';\n  });\n\n  [[7, 0], [0, 0], [7, 7], [0, 7]].forEach(function (props) {\n    var rookX = props[0];\n    var rookY = props[1];\n    var rook = board[rookY][rookX];\n\n    if (rookY === 7 && whiteKingMoved) return;\n    if (rookY === 0 && blackKingMoved) return;\n\n    // Check rook on position\n    if (!rook || !rook.type === 'rook') return;\n\n    // Check rook hasn't moved\n    if (turn.some(function (ev) {\n      if (ev.type !== 'rook') return false;\n      return ev.from.x === rookX && ev.from.y === rookY;\n    })) return;\n\n    var castlingSide = rookX === 0 ? 'q' : 'k';\n    possibleCastling += rookY === 0 ? castlingSide.toUpperCase() : castlingSide;\n  });\n\n  if (!possibleCastling) possibleCastling = '-';\n  return possibleCastling;\n};\n\nGame.prototype.enPassantTarget = function () {\n  var turn = this.turn;\n  var enPassantTarget = '';\n\n  if (turn.length) {\n    var ev = turn[turn.length - 1];\n    if (ev.color === 'W' && ev.to.y === 4) {\n      enPassantTarget = this.pieceToAN(ev.to.x, ev.to.y + 1);\n    }\n\n    if (ev.color === 'B' && ev.to.y === 3) {\n      enPassantTarget = this.pieceToAN(ev.to.x, ev.to.y - 1);\n    }\n  }\n\n  if (!enPassantTarget) enPassantTarget = '-';\n  return enPassantTarget;\n};\n\nGame.prototype.fullmoveCount = function () {\n  var count = 1;\n  this.turn.forEach(function (ev) {\n    if (ev.color === 'B') count += 1;\n  });\n\n  return count;\n};\n\nGame.prototype.gameToFEN = function () {\n  var FEN = '';\n\n  // Check the board configuration\n  FEN += this.boardToFEN();\n\n  // Find the active colour\n  FEN += ' ' + this.activeColour();\n\n  // Check castling availability\n  FEN += ' ' + this.castlingTarget();\n\n  // Check the En-passant target\n  FEN += ' ' + this.enPassantTarget();\n\n  // Add the halfmove clock\n  FEN += ' ' + this.halfmoveClock();\n\n  // Add the fullmove number\n  FEN += ' ' + this.fullmoveCount();\n\n  /*\r\n    More information about the FEN notation:\r\n    https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation\r\n    https://chessprogramming.wikispaces.com/Forsyth-Edwards+Notation\r\n  */\n\n  return FEN;\n};\n\n// Set up default game configuration\nGame.prototype.initializeGame = function () {\n  var defaultGame = new Game();\n\n  // Pawns:\n  for (var i = 0; i < 8; i++) {\n    defaultGame.piece('pawn', i, 6, 'W');\n    defaultGame.piece('pawn', i, 1, 'B');\n  }\n\n  // Black figs:\n  defaultGame.piece('rook', 0, 0, 'B');\n  defaultGame.piece('knight', 1, 0, 'B');\n  defaultGame.piece('bishop', 2, 0, 'B');\n  defaultGame.piece('queen', 3, 0, 'B');\n  defaultGame.piece('king', 4, 0, 'B');\n  defaultGame.piece('bishop', 5, 0, 'B');\n  defaultGame.piece('knight', 6, 0, 'B');\n  defaultGame.piece('rook', 7, 0, 'B');\n\n  // White figs:\n  defaultGame.piece('rook', 0, 7, 'W');\n  defaultGame.piece('knight', 1, 7, 'W');\n  defaultGame.piece('bishop', 2, 7, 'W');\n  defaultGame.piece('queen', 3, 7, 'W');\n  defaultGame.piece('king', 4, 7, 'W');\n  defaultGame.piece('bishop', 5, 7, 'W');\n  defaultGame.piece('knight', 6, 7, 'W');\n  defaultGame.piece('rook', 7, 7, 'W');\n\n  return defaultGame;\n};\n\nGame.prototype.allMoves = function () {\n  var board = this.board;\n  var allMoves = [];\n  var activeColour = this.activeColour().toUpperCase();\n\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      if (board[i][j] && board[i][j].color === activeColour) {\n        var validMoves = board[i][j].getValidMoves();\n        validMoves.forEach(function (ev) {\n          allMoves.push({\n            color: board[i][j].color,\n            from: { x: j, y: i },\n            to: ev,\n            FENname: board[i][j].FENname\n          });\n        });\n      }\n    }\n  }\n\n  return allMoves;\n};\n\nexports.default = Game;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 131325800af5eee263fa","//\r\n// RSG Chess\r\n// Licensed under Apache 2.0 LICENSE\r\n\r\nexport var PIECE_CHARS = {\r\n  pawn: { W: '♙', B: '♟' },\r\n  rook: { W: '♖', B: '♜' },\r\n  knight: { W: '♘', B: '♞' },\r\n  bishop: { W: '♗', B: '♝' },\r\n  queen: { W: '♕', B: '♛' },\r\n  king: { W: '♔', B: '♚' }\r\n}\r\n\r\nfunction Piece (x, y, charBase, color, game, type) {\r\n  if (charBase) this.char = charBase[color]\r\n  this.color = color\r\n  this.x = x\r\n  this.y = y\r\n  this.game = game\r\n  this.type = type\r\n  if (type) {\r\n    var FENname = type === 'knight' ? 'n' : type.charAt(0)\r\n    if (this.color === 'W') FENname = FENname.toUpperCase()\r\n    this.FENname = FENname\r\n  }\r\n}\r\n\r\nPiece.empty = function () {\r\n  return new Piece()\r\n}\r\n\r\nPiece.prototype.getValidMoves = function () {\r\n  return [\r\n    {x: 0, y: 0},\r\n    {x: 7, y: 7}\r\n  ]\r\n}\r\n\r\nfunction Pawn (x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.pawn, color, game, 'pawn')\r\n}\r\n\r\nPawn.prototype = Piece.empty()\r\nPawn.prototype.getValidMoves = function (simulate) {\r\n  var game = this.game\r\n  var moves = []\r\n  /* eslint-disable */\r\n  var y = this.y, x = this.x\r\n  var board = game.board, turn = game.turn, length = turn.length\r\n  var last, turnTo, turnFrom, figX, passantLast, passantFig\r\n  var colorY = this.color === 'W' ? y - 1 : y + 1  \r\n  var colorY2 = this.color === 'W' ? y - 2 : y + 2  \r\n  var passantY2 = this.color === 'W' ? 3 : 4  \r\n  var figXArray = [x - 1, x + 1]\r\n  /* eslint-enable */\r\n\r\n  if (colorY < 8 && colorY >= 0 && !board[colorY][x]) {\r\n    moves.push({x: x, y: colorY})\r\n    if ((y === 1 || y === 6) && colorY2 < 8 && colorY2 >= 0 && !game.board[colorY2][x]) {\r\n      moves.push({x: x, y: colorY2})\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < 2; i++) {\r\n    figX = figXArray[i]\r\n    if (colorY < 8 && colorY >= 0 && board[colorY][figX] &&\r\n    board[colorY][figX].color !== this.color) moves.push({x: figX, y: colorY})\r\n  }\r\n\r\n  for (let i = 0; i < 2; i++) {\r\n    figX = figXArray[i]\r\n    last = turn[length - 1]\r\n\r\n    if (\r\n      last && last.to.x === figX && last.to.y === y && last.color !== this.color &&\r\n      (last.from.y === 1 || last.from.y === 6) && (y === 3 || y === 4)\r\n    ) {\r\n      moves.push({\r\n        x: figX,\r\n        y: colorY,\r\n        movePiece: {\r\n          piece: game.board[y][figX],\r\n          from: {\r\n            x: figX,\r\n            y: y\r\n          },\r\n          to: null\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  var validMoves = []\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this)\r\n  } else {\r\n    validMoves = moves\r\n  }\r\n\r\n  return validMoves\r\n}\r\n\r\nPiece.pawn = function (x, y, color, game) {\r\n  return new Pawn(x, y, color, game)\r\n}\r\n\r\n// //\r\n\r\nfunction Rook (x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.rook, color, game, 'rook')\r\n}\r\n\r\nRook.prototype = Piece.empty()\r\nRook.prototype.getValidMoves = function (simulate) {\r\n  var game = this.game\r\n  var moves = [];\r\n\r\n  [[-1, 0], [1, 0], [0, 1], [0, -1]].forEach(function (coef) {\r\n    var index, x, y, piece\r\n    for (index = 1; ; index++) {\r\n      x = this.x + coef[0] * index\r\n      y = this.y + coef[1] * index\r\n      if (y < 0 || y > 7 || x < 0 || x > 7) break\r\n\r\n      piece = game.board[y][x]\r\n      if (piece && piece.color === this.color) break\r\n\r\n      moves.push({x: x, y: y})\r\n      if (piece) break\r\n    }\r\n  }, this)\r\n\r\n  var validMoves = []\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this)\r\n  } else {\r\n    validMoves = moves\r\n  }\r\n\r\n  return validMoves\r\n}\r\n\r\nPiece.rook = function (x, y, color, game) {\r\n  return new Rook(x, y, color, game)\r\n}\r\n\r\n// //\r\n\r\nfunction Knight (x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.knight, color, game, 'knight')\r\n}\r\n\r\nKnight.prototype = Piece.empty()\r\nKnight.prototype.getValidMoves = function (simulate) {\r\n  var game = this.game\r\n  var moves = []\r\n\r\n  var coordinates = [ [2, 1], [-2, 1], [1, 2], [-1, 2], [2, -1], [-2, -1], [1, -2], [-1, -2] ]\r\n\r\n  var one, two\r\n  for (var i = 0; i < coordinates.length; i++) {\r\n    var help = false\r\n    var boardPiece\r\n    one = coordinates[i][0]\r\n    two = coordinates[i][1]\r\n\r\n    if (this.x + one < 8 && this.x + one >= 0 && this.y + two < 8 && this.y + two >= 0) {\r\n      boardPiece = game.board[this.y + two][this.x + one]\r\n      help = boardPiece ? boardPiece.color !== this.color : true\r\n    }\r\n\r\n    if (help) {\r\n      moves.push({x: this.x + one, y: this.y + two})\r\n    }\r\n  }\r\n\r\n  var validMoves = []\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this)\r\n  } else {\r\n    validMoves = moves\r\n  }\r\n\r\n  return validMoves\r\n}\r\n\r\nPiece.knight = function (x, y, color, game) {\r\n  return new Knight(x, y, color, game)\r\n}\r\n\r\n// //\r\n\r\nfunction Bishop (x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.bishop, color, game, 'bishop')\r\n}\r\n\r\nBishop.prototype = Piece.empty()\r\nBishop.prototype.getValidMoves = function (simulate) {\r\n  var game = this.game\r\n  var moves = [];\r\n\r\n  [[-1, -1], [1, 1], [-1, 1], [1, -1]].forEach(function (coef) {\r\n    var index, x, y, piece\r\n    for (index = 1; ; index++) {\r\n      x = this.x + coef[0] * index\r\n      y = this.y + coef[1] * index\r\n      if (y < 0 || y > 7 || x < 0 || x > 7) break\r\n\r\n      piece = game.board[y][x]\r\n      if (piece && piece.color === this.color) break\r\n\r\n      moves.push({x: x, y: y})\r\n      if (piece) break\r\n    }\r\n  }, this)\r\n\r\n  var validMoves = []\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this)\r\n  } else {\r\n    validMoves = moves\r\n  }\r\n\r\n  return validMoves\r\n}\r\n\r\nPiece.bishop = function (x, y, color, game) {\r\n  return new Bishop(x, y, color, game)\r\n}\r\n\r\n// //\r\n\r\nfunction Queen (x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.queen, color, game, 'queen')\r\n}\r\n\r\nQueen.prototype = Piece.empty()\r\nQueen.prototype.getValidMoves = function (simulate) {\r\n  var game = this.game\r\n  var rookMoves = Rook.prototype.getValidMoves.call(this)\r\n  var bishopMoves = Bishop.prototype.getValidMoves.call(this)\r\n  var moves = rookMoves.concat(bishopMoves)\r\n\r\n  var validMoves = []\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, this)\r\n  } else {\r\n    validMoves = moves\r\n  }\r\n\r\n  return validMoves\r\n}\r\n\r\nPiece.queen = function (x, y, color, game) {\r\n  return new Queen(x, y, color, game)\r\n}\r\n\r\n// //\r\n\r\nfunction King (x, y, color, game) {\r\n  Piece.call(this, x, y, PIECE_CHARS.king, color, game, 'king')\r\n}\r\n\r\nKing.prototype = Piece.empty()\r\nKing.prototype.getValidMoves = function (simulate) {\r\n  var moves = []\r\n  var coordinates = [ [0, 1], [0, -1], [1, 1], [-1, -1], [1, -1], [-1, 1], [-1, 0], [1, 0] ]\r\n  var x = this.x\r\n  var y = this.y\r\n  var game = this.game\r\n  var turn = game.turn\r\n  var self = this\r\n\r\n  coordinates.forEach(function (coord) {\r\n    var piece\r\n    var xx = x + coord[0]\r\n    var yy = y + coord[1]\r\n\r\n    if (xx < 8 && xx >= 0 && yy < 8 && yy >= 0) {\r\n      piece = game.board[yy][xx]\r\n      if (!piece || piece.color !== self.color) {\r\n        moves.push({x: xx, y: yy})\r\n      }\r\n    }\r\n  })\r\n\r\n  // Check king hasn't moved\r\n  var kingMoved = turn.some(function (turn) {\r\n    return turn.type === 'king' && turn.color === self.color\r\n  })\r\n\r\n  if (!kingMoved) {\r\n    [[0, 2, -1], [7, 6, +1]].forEach(function (props) {\r\n      var rookX = props[0]\r\n      var newKingX = props[1]\r\n      var dir = props[2]\r\n      var rook = game.board[y][rookX]\r\n\r\n      // Check rook on position\r\n      if (!rook || !rook.type === 'rook') return\r\n\r\n      // Check rook hasn't moved\r\n      if (turn.some(function (ev) {\r\n        return ev.from.x === rookX && ev.from.y === y\r\n      })) return\r\n\r\n      // Check squares empty and safe\r\n      for (var xx = x + dir; xx !== rookX; xx += dir) {\r\n        if (game.board[y][xx]) return\r\n        var safe = true\r\n        game.board.forEach(function (ev) {\r\n          ev.forEach(function (evv) {\r\n            if (evv && evv.type !== 'king' && evv.color !== self.color) {\r\n              evv.getValidMoves().forEach(function (evMove) {\r\n                if (evMove && evMove.y === y && evMove.x === xx) safe = false\r\n              })\r\n            }\r\n          })\r\n        })\r\n        if (!safe) return\r\n      }\r\n\r\n      var rochade = {\r\n        x: newKingX,\r\n        y: y,\r\n        movePiece: {\r\n          piece: self.game.board[y][rookX],\r\n          from: {\r\n            x: rookX, y: y\r\n          },\r\n          to: {\r\n            y: y, x: x + dir\r\n          }\r\n        }\r\n      }\r\n\r\n      moves.push(rochade)\r\n    })\r\n  }\r\n\r\n  var validMoves = []\r\n  if (simulate) {\r\n    validMoves = game.simulateAndFilter(moves, self)\r\n  } else {\r\n    validMoves = moves\r\n  }\r\n\r\n  return validMoves\r\n}\r\n\r\nPiece.king = function (x, y, color, game) {\r\n  return new King(x, y, color, game)\r\n}\r\n\r\nexport { Piece, Pawn, Rook, Knight, Bishop, Queen, King }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pieces.js","//\r\n// RSG Chess\r\n// Licensed under Apache 2.0 LICENSE\r\n\r\nconst ChessAI = function (game) {\r\n  var board = game.board\r\n  // best values /bestMove & bestValue/\r\n  var bestMove = null\r\n  var bestValue = -9999\r\n  game.allMoves().forEach(function (ev) {\r\n    var from = ev.from\r\n    var to = ev.to\r\n    var piece = board[from.y][from.x]\r\n    var movePiece = board[to.y][to.x] ? {\r\n      piece: board[to.y][to.x],\r\n      from: { x: to.x, y: to.y },\r\n      to: null\r\n    } : null\r\n    // check for en-passant, and already captured pieces /movePiece/\r\n    if (to.movePiece) movePiece = to.movePiece\r\n    if (movePiece) game.simpleMovePiece(movePiece.piece, movePiece.from, movePiece.to)\r\n    // simulate the current move from .getValidMoves() array /to/\r\n    game.simpleMovePiece(piece, from, { x: to.x, y: to.y })\r\n    var boardValue = -evaluateBoard(board)\r\n    if (boardValue > bestValue && board[to.y][to.x].color === 'B') {\r\n      bestValue = boardValue\r\n      bestMove = { from: from, to: to }\r\n    }\r\n\r\n    // return the current move /ev/\r\n    game.simpleMovePiece(piece, { x: to.x, y: to.y }, from)\r\n    if (movePiece) game.simpleMovePiece(movePiece.piece, movePiece.to, movePiece.from)\r\n  })\r\n  // return the best move\r\n  return bestMove\r\n}\r\n\r\nvar evaluateBoard = function (board) {\r\n  var totalEvaluation = 0\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      // calculate the current evaluation\r\n      totalEvaluation = totalEvaluation + getPieceValue(board[i][j])\r\n    }\r\n  }\r\n  // return the total evaluation\r\n  return totalEvaluation\r\n}\r\n\r\nvar getPieceValue = function (piece) {\r\n  if (piece === null) {\r\n    return 0\r\n  }\r\n\r\n  // get value for every piece on the board\r\n  var getAbsoluteValue = function (piece) {\r\n    if (piece.type === 'pawn') {\r\n      return 10\r\n    } else if (piece.type === 'rook') {\r\n      return 50\r\n    } else if (piece.type === 'knight') {\r\n      return 30\r\n    } else if (piece.type === 'bishop') {\r\n      return 30\r\n    } else if (piece.type === 'queen') {\r\n      return 90\r\n    } else if (piece.type === 'king') {\r\n      return 900\r\n    }\r\n  }\r\n\r\n  // calculate the absolute value and return it\r\n  var absoluteValue = getAbsoluteValue(piece, piece.color === 'W')\r\n  return piece.color === 'W' ? absoluteValue : -absoluteValue\r\n}\r\n\r\n// export the algorithm\r\nexport default ChessAI\r\n\r\n// Written by Radi Cho\r\n// RSG Chess - by RSG Group\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AI.js","// Let's import...\r\nimport Game from './game'\r\nimport * as Piece from './pieces'\r\nimport AI from './AI'\r\n\r\nconst Graphics = 'This feature is coming soon!'\r\n\r\n// And export...\r\nexport {\r\n  Game,\r\n  Piece,\r\n  AI,\r\n  Graphics\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { Piece } from './pieces.js'\r\nimport ChessAI from './AI.js'\r\n\r\nfunction Game (promoCallback) {\r\n  // the game board\r\n  this.board = []\r\n  // fill the board\r\n  for (var i = 0; i < 8; i++) {\r\n    var arrayIn = []\r\n    for (var j = 0; j < 8; j++) {\r\n      arrayIn.push(null)\r\n    }\r\n    this.board.push(arrayIn)\r\n  }\r\n\r\n  // the history of all turns\r\n  this.turn = []\r\n  // the current FEN status\r\n  this.FEN = []\r\n  // the current game configuration as FEN\r\n  this.FENboard = []\r\n  // the history of all game configurations displayed using FEN\r\n  this.threefold = []\r\n}\r\n\r\nGame.prototype.piece = function (type, x, y, color) {\r\n  var piece = Piece[type](x, y, color, this)\r\n  this.board[y][x] = piece\r\n\r\n  this.FEN = this.gameToFEN()\r\n  this.FENboard = this.boardToFEN()\r\n}\r\n\r\nGame.prototype.moveSelected = function (\r\n  selected, to, promotionCallback, checkmateCallback, playAgainstAI, simulate\r\n) {\r\n  var x = to.x\r\n  var y = to.y\r\n\r\n  if (selected) {\r\n    var from = { x: selected.x, y: selected.y }\r\n\r\n    if (this.board[y][x] !== selected) {\r\n      var validMoves = selected.getValidMoves(!simulate)\r\n      var validMove = null\r\n\r\n      for (var i = 0; i < validMoves.length; i++) {\r\n        var vm = validMoves[i]\r\n        if (vm.x === x && vm.y === y) {\r\n          validMove = vm\r\n          break\r\n        }\r\n      }\r\n\r\n      if (!validMove) return false\r\n      var movePiece = validMove.movePiece\r\n      var take, paste, rook\r\n      if (movePiece) {\r\n        take = movePiece.from\r\n        paste = movePiece.to\r\n        if (paste === null) {\r\n          this.board[take.y][take.x] = null\r\n        } else {\r\n          rook = this.board[take.y][take.x]\r\n          this.board[paste.y][paste.x] = rook\r\n          rook.x = paste.x\r\n          rook.y = paste.y\r\n          this.board[take.y][take.x] = null\r\n        }\r\n      }\r\n\r\n      var piece = this.board[y][x] ? this.board[y][x] : null\r\n      movePiece = (movePiece ? validMove.movePiece : null)\r\n      this.turn.push({\r\n        from: from,\r\n        to: to,\r\n        color: selected.color,\r\n        type: selected.type,\r\n        piece: piece,\r\n        movePiece: movePiece\r\n      })\r\n\r\n      this.board[y][x] = selected\r\n      this.board[selected.y][selected.x] = null\r\n      this.board[y][x].x = x\r\n      this.board[y][x].y = y\r\n\r\n      this.FEN = this.gameToFEN()\r\n      this.FENboard = this.boardToFEN()\r\n      // check for threefold repetition\r\n\r\n      this.threefold.push(this.FENboard)\r\n      if (selected.type === 'pawn' || piece) this.threefold = []\r\n      if (this.threefoldCheck()) checkmateCallback('D')\r\n\r\n      // check for the fifty-move rule\r\n      if (this.halfmoveClock() >= 50) checkmateCallback('D')\r\n\r\n      // check for pawn promotion\r\n      if (selected.type === 'pawn') {\r\n        if ((selected.color === 'W' && y === 0) || (selected.color === 'B' && y === 7)) {\r\n          if (promotionCallback) {\r\n            !playAgainstAI && selected.color === 'B'\r\n              ? this.promotePawn(selected, x, y, selected.color, 'queen')\r\n              : promotionCallback(selected, x, y, selected.color)\r\n          }\r\n        }\r\n      };\r\n\r\n      var checkmateColor = selected.color === 'W' ? 'B' : 'W'\r\n      var checkmateValue = this.checkmate(checkmateColor)\r\n      if (checkmateValue) checkmateCallback(checkmateValue)\r\n\r\n      // Play AI\r\n      if (playAgainstAI) {\r\n        var bestMove = ChessAI(this)\r\n        this.moveSelected(\r\n          this.board[bestMove.from.y][bestMove.from.x],\r\n          bestMove.to,\r\n          promotionCallback,\r\n          checkmateCallback,\r\n          false,\r\n          simulate\r\n        )\r\n      }\r\n      // end\r\n    }\r\n    selected = null\r\n    return true\r\n  }\r\n}\r\n\r\nGame.prototype.promotePawn = function (pawn, x, y, color, type) {\r\n  this.piece(type, x, y, color)\r\n}\r\n\r\nGame.prototype.simulateAndFilter = function (moves, piece) {\r\n  var validMoves = []\r\n  var self = this\r\n  var board = this.board\r\n\r\n  moves.forEach(function (move, i) {\r\n    var y = move.y\r\n    var x = move.x\r\n    var from = { x: piece.x, y: piece.y }\r\n    var movePiece = board[y][x] ? {\r\n      piece: board[y][x],\r\n      from: { x: x, y: y },\r\n      to: null\r\n    } : null\r\n\r\n    if (move.movePiece) movePiece = move.movePiece\r\n    if (movePiece) self.simpleMovePiece(movePiece.piece, movePiece.from, movePiece.to)\r\n\r\n    self.simpleMovePiece(piece, from, { x: x, y: y })\r\n    var warning = self.warning(piece.color)\r\n\r\n    // Return king\r\n    self.simpleMovePiece(piece, { x: x, y: y }, from)\r\n\r\n    // return the movePiece with simpleMovePiece() method\r\n    if (movePiece) self.simpleMovePiece(movePiece.piece, movePiece.to, movePiece.from)\r\n\r\n    if (!warning) validMoves.push(move)\r\n  })\r\n  return validMoves\r\n}\r\n\r\nGame.prototype.checkmate = function (color) {\r\n  // using let will allow us to make the code a bit simpler\r\n  for (let i = 0; i < 8; i++) {\r\n    for (let j = 0; j < 8; j++) {\r\n      if (\r\n        this.board[i][j] &&\r\n        this.board[i][j].color === color &&\r\n        this.board[i][j].getValidMoves(true).length\r\n      ) return false\r\n    }\r\n  }\r\n  if (this.warning(color)) return color\r\n  return 'D'\r\n}\r\n\r\nGame.prototype.simpleMovePiece = function (piece, from, to) {\r\n  var board = this.board\r\n  if (to) {\r\n    board[to.y][to.x] = piece\r\n    piece.x = to.x\r\n    piece.y = to.y\r\n  }\r\n  if (from) board[from.y][from.x] = null\r\n}\r\n\r\nGame.prototype.warning = function (color) {\r\n  var result = false\r\n  var king\r\n\r\n  this.board.forEach(function (yyy) {\r\n    yyy.forEach(function (xxx) {\r\n      if (xxx && xxx.color === color && xxx.type === 'king') {\r\n        king = xxx\r\n      }\r\n    })\r\n  })\r\n\r\n  this.board.forEach(function (yyy) {\r\n    yyy.forEach(function (xxx) {\r\n      if (xxx && xxx.color !== color) {\r\n        xxx.getValidMoves().forEach(function (mmm) {\r\n          if (mmm.x === king.x && mmm.y === king.y) result = true\r\n        })\r\n      }\r\n    })\r\n  })\r\n  return result\r\n}\r\n\r\nGame.prototype.threefoldCheck = function () {\r\n  var threefold = this.threefold\r\n  var length = threefold.length\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    // using let will allow us to make the code simpler\r\n    let count = 0\r\n    for (var j = i + 1; j < length; j++) {\r\n      if (threefold[i] === threefold[j]) count += 1\r\n    }\r\n    if (count >= 2) return true\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nGame.prototype.pieceToAN = function (x, y) {\r\n  var xChars = 'abcdefgh'\r\n  return xChars.charAt(x) + (8 - y)\r\n}\r\n\r\n// Support FEN functions in the API\r\nGame.prototype.boardToFEN = function () {\r\n  var board = this.board\r\n\r\n  // Convert the board configuration into FEN\r\n  var FENboard = ''\r\n  var missingPieces = 0\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      if (board[i][j]) {\r\n        if (missingPieces) FENboard += missingPieces\r\n        missingPieces = 0\r\n        FENboard += board[i][j].FENname\r\n      } else {\r\n        missingPieces++\r\n      }\r\n    }\r\n    if (missingPieces) FENboard += missingPieces\r\n    missingPieces = 0\r\n    FENboard += i < 7 ? '/' : ''\r\n  }\r\n\r\n  return FENboard\r\n}\r\n\r\nGame.prototype.halfmoveClock = function () {\r\n  var turn = this.turn\r\n  var length = turn.length\r\n  var count = 0\r\n  if (turn.length === 0) return count\r\n\r\n  var ev = turn[(length - 1) - count]\r\n  while (count <= length - 1 && ev.type !== 'pawn' && !ev.piece) {\r\n    count++\r\n    ev = turn[(length - 1) - count]\r\n  }\r\n\r\n  return count\r\n}\r\n\r\nGame.prototype.activeColour = function () {\r\n  var turn = this.turn\r\n  var activeColor =\r\n    turn.length &&\r\n    turn[turn.length - 1].color === 'W' ? 'b' : 'w'\r\n\r\n  return activeColor\r\n}\r\n\r\nGame.prototype.castlingTarget = function () {\r\n  var board = this.board\r\n  var turn = this.turn\r\n  var possibleCastling = ''\r\n\r\n  var whiteKingMoved\r\n  var blackKingMoved\r\n  turn.forEach(function (turn) {\r\n    whiteKingMoved = turn.type === 'king' && turn.color === 'W'\r\n    blackKingMoved = turn.type === 'king' && turn.color === 'B'\r\n  });\r\n\r\n  [[7, 0], [0, 0], [7, 7], [0, 7]].forEach(function (props) {\r\n    var rookX = props[0]\r\n    var rookY = props[1]\r\n    var rook = board[rookY][rookX]\r\n\r\n    if (rookY === 7 && whiteKingMoved) return\r\n    if (rookY === 0 && blackKingMoved) return\r\n\r\n    // Check rook on position\r\n    if (!rook || !rook.type === 'rook') return\r\n\r\n    // Check rook hasn't moved\r\n    if (turn.some(function (ev) {\r\n      if (ev.type !== 'rook') return false\r\n      return ev.from.x === rookX && ev.from.y === rookY\r\n    })) return\r\n\r\n    var castlingSide = rookX === 0 ? 'q' : 'k'\r\n    possibleCastling += rookY === 0 ? castlingSide.toUpperCase() : castlingSide\r\n  })\r\n\r\n  if (!possibleCastling) possibleCastling = '-'\r\n  return possibleCastling\r\n}\r\n\r\nGame.prototype.enPassantTarget = function () {\r\n  var turn = this.turn\r\n  var enPassantTarget = ''\r\n\r\n  if (turn.length) {\r\n    var ev = turn[turn.length - 1]\r\n    if (ev.color === 'W' && ev.to.y === 4) {\r\n      enPassantTarget = this.pieceToAN(ev.to.x, ev.to.y + 1)\r\n    }\r\n\r\n    if (ev.color === 'B' && ev.to.y === 3) {\r\n      enPassantTarget = this.pieceToAN(ev.to.x, ev.to.y - 1)\r\n    }\r\n  }\r\n\r\n  if (!enPassantTarget) enPassantTarget = '-'\r\n  return enPassantTarget\r\n}\r\n\r\nGame.prototype.fullmoveCount = function () {\r\n  var count = 1\r\n  this.turn.forEach(function (ev) {\r\n    if (ev.color === 'B') count += 1\r\n  })\r\n\r\n  return count\r\n}\r\n\r\nGame.prototype.gameToFEN = function () {\r\n  var FEN = ''\r\n\r\n  // Check the board configuration\r\n  FEN += this.boardToFEN()\r\n\r\n  // Find the active colour\r\n  FEN += ' ' + this.activeColour()\r\n\r\n  // Check castling availability\r\n  FEN += ' ' + this.castlingTarget()\r\n\r\n  // Check the En-passant target\r\n  FEN += ' ' + this.enPassantTarget()\r\n\r\n  // Add the halfmove clock\r\n  FEN += ' ' + this.halfmoveClock()\r\n\r\n  // Add the fullmove number\r\n  FEN += ' ' + this.fullmoveCount()\r\n\r\n  /*\r\n    More information about the FEN notation:\r\n    https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation\r\n    https://chessprogramming.wikispaces.com/Forsyth-Edwards+Notation\r\n  */\r\n\r\n  return FEN\r\n}\r\n\r\n// Set up default game configuration\r\nGame.prototype.initializeGame = function () {\r\n  var defaultGame = new Game()\r\n\r\n  // Pawns:\r\n  for (var i = 0; i < 8; i++) {\r\n    defaultGame.piece('pawn', i, 6, 'W')\r\n    defaultGame.piece('pawn', i, 1, 'B')\r\n  }\r\n\r\n  // Black figs:\r\n  defaultGame.piece('rook', 0, 0, 'B')\r\n  defaultGame.piece('knight', 1, 0, 'B')\r\n  defaultGame.piece('bishop', 2, 0, 'B')\r\n  defaultGame.piece('queen', 3, 0, 'B')\r\n  defaultGame.piece('king', 4, 0, 'B')\r\n  defaultGame.piece('bishop', 5, 0, 'B')\r\n  defaultGame.piece('knight', 6, 0, 'B')\r\n  defaultGame.piece('rook', 7, 0, 'B')\r\n\r\n  // White figs:\r\n  defaultGame.piece('rook', 0, 7, 'W')\r\n  defaultGame.piece('knight', 1, 7, 'W')\r\n  defaultGame.piece('bishop', 2, 7, 'W')\r\n  defaultGame.piece('queen', 3, 7, 'W')\r\n  defaultGame.piece('king', 4, 7, 'W')\r\n  defaultGame.piece('bishop', 5, 7, 'W')\r\n  defaultGame.piece('knight', 6, 7, 'W')\r\n  defaultGame.piece('rook', 7, 7, 'W')\r\n\r\n  return defaultGame\r\n}\r\n\r\nGame.prototype.allMoves = function () {\r\n  var board = this.board\r\n  var allMoves = []\r\n  var activeColour = this.activeColour().toUpperCase()\r\n\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      if (board[i][j] && board[i][j].color === activeColour) {\r\n        var validMoves = board[i][j].getValidMoves()\r\n        validMoves.forEach(function (ev) {\r\n          allMoves.push({\r\n            color: board[i][j].color,\r\n            from: {x: j, y: i},\r\n            to: ev,\r\n            FENname: board[i][j].FENname\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return allMoves\r\n}\r\n\r\nexport default Game\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game.js"],"sourceRoot":""}